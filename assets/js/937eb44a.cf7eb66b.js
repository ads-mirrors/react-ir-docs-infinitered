"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[3138],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),c=p(t),m=i,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return t?a.createElement(h,l(l({ref:n},u),{},{components:t})):a.createElement(h,l({ref:n},u))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,l=new Array(o);l[0]=m;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[c]="string"==typeof e?e:i,l[1]=r;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9519:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>p});var a=t(7462),i=(t(7294),t(3905));const o={sidebar_position:700},l="Plugins",r={unversionedId:"gluegun/plugins",id:"gluegun/plugins",title:"Plugins",description:"Functionality is added to the CLI runtime with plugins. Plugins can be yours or the end users.",source:"@site/docs/gluegun/plugins.md",sourceDirName:"gluegun",slug:"/gluegun/plugins",permalink:"/docs/gluegun/plugins",draft:!1,tags:[],version:"current",sidebarPosition:700,frontMatter:{sidebar_position:700},sidebar:"Gluegun",previous:{title:"Making a plugin for your Gluegun-powered CLI",permalink:"/docs/gluegun/tutorials/making-a-plugin"},next:{title:"Sniff",permalink:"/docs/gluegun/sniff"}},s={},p=[{value:"commands",id:"commands",level:2},{value:"templates",id:"templates",level:2},{value:"extensions",id:"extensions",level:2},{value:"async extensions",id:"async-extensions",level:3},{value:"name",id:"name",level:2},{value:"defaults",id:"defaults",level:2}],u={toc:p},c="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(c,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"plugins"},"Plugins"),(0,i.kt)("p",null,"Functionality is added to the ",(0,i.kt)("inlineCode",{parentName:"p"},"CLI runtime")," with plugins. Plugins can be yours or the end users."),(0,i.kt)("p",null,"A plugin is directory that contains 3 optional sub-directories:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"commands")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"templates")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"extensions"))),(0,i.kt)("p",null,"(You can also nest these three directories in ",(0,i.kt)("inlineCode",{parentName:"p"},"build"),", for a build pipeline, and Gluegun will still find them. Requires Gluegun 4.1.0+.)"),(0,i.kt)("p",null,"And 1 optional file, which can be ",(0,i.kt)("inlineCode",{parentName:"p"},"<brand>.config.js"),", ",(0,i.kt)("inlineCode",{parentName:"p"},".<brand>rc.json"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},".<brand>rc.yaml"),". Replace ",(0,i.kt)("inlineCode",{parentName:"p"},"<brand>")," with the name of your CLI."),(0,i.kt)("p",null,"Other than the 3 directories listed, you're welcome to put any other files or sub-directories in the plugin directory. For example, we include a ",(0,i.kt)("inlineCode",{parentName:"p"},"plugin.js")," file in the root of plugins for ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/infinitered/ignite"},"Ignite CLI")," to help us load it effectively."),(0,i.kt)("p",null,"Since multiple plugins can be loaded, they must have unique names. The names are indicated by reading the ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," property of the configuration (more on this below), or the plugin directory name itself."),(0,i.kt)("h2",{id:"commands"},"commands"),(0,i.kt)("p",null,"Commands are run from the command line (CLI)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"movies actor\n")),(0,i.kt)("p",null,"Here, the ",(0,i.kt)("inlineCode",{parentName:"p"},"actor")," command is run. It is a JS file (",(0,i.kt)("inlineCode",{parentName:"p"},"src/commands/actor.js"),") that exports a structure that looks something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  name: 'actor',\n  alias: ['a'],\n  description: 'Displays the name of an actor',\n  hidden: false,\n  dashed: false,\n  run: async (toolbox) => {\n    const { print } = toolbox\n\n    print.info(`Tom Hanks`)\n  },\n}\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"description")," properties are used in ",(0,i.kt)("inlineCode",{parentName:"p"},"printCommands")," calls to print out some help in a table."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"alias")," allows you to invoke these commands using an alias."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"hidden")," says whether to show the command in help screens or not."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"dashed")," lets you run the command as a dashed command, like ",(0,i.kt)("inlineCode",{parentName:"p"},"--version")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"-v"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"run")," property should be a function (async or not) that does whatever you want it to. You'll receive the gluegun ",(0,i.kt)("inlineCode",{parentName:"p"},"toolbox")," object which contains the ",(0,i.kt)("a",{parentName:"p",href:"/docs/gluegun/toolbox-api/"},"core extensions")," and any additional extensions you've loaded."),(0,i.kt)("h2",{id:"templates"},"templates"),(0,i.kt)("p",null,"Templates are ",(0,i.kt)("a",{parentName:"p",href:"http://www.embeddedjs.com/"},"ejs")," files that get translated by a command into a source code file or similar. For an example, check out the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/infinitered/gluegun/tree/master/src/cli"},"Gluegun CLI")," itself."),(0,i.kt)("h2",{id:"extensions"},"extensions"),(0,i.kt)("p",null,"Extensions are additional functionality that you can monkeypatch onto the ",(0,i.kt)("inlineCode",{parentName:"p"},"toolbox")," object. They look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// extensions/sayhello.js\nmodule.exports = (toolbox) => {\n  const { print } = toolbox\n\n  toolbox.sayhello = () => {\n    print.info('Hello from an extension!')\n  }\n}\n")),(0,i.kt)("p",null,"When you have this extension, you can access it in any command file, like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// ...\nrun: async (toolbox) => {\n  const { sayhello } = toolbox\n\n  sayhello()\n\n  // or\n\n  toolbox.sayhello()\n}\n")),(0,i.kt)("h3",{id:"async-extensions"},"async extensions"),(0,i.kt)("p",null,"Extensions maybe also be asynchronous, allowing for things like network calls or other asynchronous operations."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// extensions/getMyData.js\nconst { asyncCall } = require('@company/lib')\n\nmodule.exports = async (toolbox) {\n  const { data } = await asyncCall()\n  toolbox.myData = data\n}\n")),(0,i.kt)("h1",{id:"configuration-file"},"Configuration File"),(0,i.kt)("p",null,"Gluegun uses ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/davidtheclark/cosmiconfig"},"cosmiconfig")," to determine configuration. It can be:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"an object under the ",(0,i.kt)("inlineCode",{parentName:"li"},"<brand>")," key in the ",(0,i.kt)("inlineCode",{parentName:"li"},"package.json")),(0,i.kt)("li",{parentName:"ul"},"a ",(0,i.kt)("inlineCode",{parentName:"li"},".<brand>rc")," file (containing either yaml or json)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".<brand>rc.json")," file"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".<brand>rc.yaml")," file"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<brand>.config.js")," JS file that exports an object")),(0,i.kt)("p",null,"In this configuration, you can configure your plugin's name and also set up certain user-overridable defaults."),(0,i.kt)("h2",{id:"name"},"name"),(0,i.kt)("p",null,"The name of your plugin. If ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," does not exist, the default will be the name of the directory."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "something"\n}\n')),(0,i.kt)("p",null,"Since many plugins can be installed, we recommend namespacing them with your CLI. For example, for ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/infinitered/ignite"},"Ignite")," plugins we have ",(0,i.kt)("inlineCode",{parentName:"p"},"ignite-i18n"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ignite-maps"),", etc. For ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/infinitered/solidarity"},"Solidarity"),", we have ",(0,i.kt)("inlineCode",{parentName:"p"},"solidarity-react-native")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"solidarity-elixir"),"."),(0,i.kt)("p",null,"A name:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"can contain ",(0,i.kt)("strong",{parentName:"li"},"numbers & letters")),(0,i.kt)("li",{parentName:"ul"},"should be ",(0,i.kt)("strong",{parentName:"li"},"lowercase")),(0,i.kt)("li",{parentName:"ul"},"spaces-should-have-",(0,i.kt)("strong",{parentName:"li"},"dashes"),"-if-you-need-them")),(0,i.kt)("h2",{id:"defaults"},"defaults"),(0,i.kt)("p",null,"Default configuration settings which may be used by your commands and overridden by end users."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "semicolons": true,\n  "colorTheme": ["red", "no", "blue", "aaaaaaaaa"]\n}\n')),(0,i.kt)("p",null,"If you'd like to follow a tutorial to make a plugin, check out the ",(0,i.kt)("a",{parentName:"p",href:"/docs/gluegun/tutorials/making-a-plugin"},'"Making a Plugin" tutorial'),"."))}d.isMDXComponent=!0}}]);