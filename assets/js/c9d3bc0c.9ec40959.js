"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[1253],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),f=r,m=c["".concat(p,".").concat(f)]||c[f]||d[f]||o;return n?i.createElement(m,a(a({ref:t},u),{},{components:n})):i.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4963:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var i=n(7462),r=(n(7294),n(3905));const o={title:"eas.json",sidebar_position:70},a="eas.json",l={unversionedId:"ignite-cli/boilerplate/eas.json",id:"ignite-cli/boilerplate/eas.json",title:"eas.json",description:"eas.json is the configuration file for Expo Application Service (EAS). It allows you to create profiles for building and distributing your app.",source:"@site/docs/ignite-cli/boilerplate/eas.json.md",sourceDirName:"ignite-cli/boilerplate",slug:"/ignite-cli/boilerplate/eas.json",permalink:"/ignite-cli/boilerplate/eas.json",draft:!1,tags:[],version:"current",sidebarPosition:70,frontMatter:{title:"eas.json",sidebar_position:70},sidebar:"Ignite",previous:{title:"App.tsx",permalink:"/ignite-cli/boilerplate/App.tsx"},next:{title:"Concepts &amp; Features",permalink:"/ignite-cli/concept/Concepts"}},p={},s=[],u={toc:s},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"easjson"},"eas.json"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"eas.json")," is the configuration file for ",(0,r.kt)("a",{parentName:"p",href:"https://docs.expo.dev/eas/"},"Expo Application Service (EAS)"),". It allows you to create profiles for building and distributing your app."),(0,r.kt)("p",null,"Ignite includes a few default build profiles for common scenarios, but you can customize or add your own profiles too!"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"development")," - internal debug build for testing on simulators"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"development:device")," - internal debug build for testing on physical devices"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"preview")," - internal production build for testing on simulators"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"preview:device")," - internal production build for testing on physical devices"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"production")," - default production profile intended for external distribution")),(0,r.kt)("p",null,"Note how profiles can share settings via ",(0,r.kt)("inlineCode",{parentName:"p"},"extends"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"development": {\n    "extends": "production",\n    "distribution": "internal",\n    "android": {\n        "gradleCommand": ":app:assembleDebug"\n    },\n    "ios": {\n        "buildConfiguration": "Debug",\n        "simulator": true\n    }\n},\n"development:device": {\n    "extends": "development",\n    "distribution": "internal",\n    "ios": {\n        "buildConfiguration": "Debug",\n        "simulator": false\n    }\n},\n"production": {}\n')),(0,r.kt)("p",null,"In this example, ",(0,r.kt)("inlineCode",{parentName:"p"},"development:device")," inherits the settings from ",(0,r.kt)("inlineCode",{parentName:"p"},"development"),", but changes the ",(0,r.kt)("inlineCode",{parentName:"p"},"ios")," setting to ",(0,r.kt)("inlineCode",{parentName:"p"},"simulator: false"),". You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"extends")," to create a set of profiles to fit your needs without duplicating configuration."),(0,r.kt)("p",null,"View ",(0,r.kt)("a",{parentName:"p",href:"https://docs.expo.dev/build/eas-json/"},"Expo's eas.json Documentation")," for more info."))}d.isMDXComponent=!0}}]);