"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[9226],{3424:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(4848),a=t(8453);const o={title:"MMKV"},c="React Native MMKV",i={id:"reactotron/plugins/react-native-mmkv",title:"MMKV",description:"The reactotron-react-native-mmkv plugin allows you to track MMKV updates.",source:"@site/docs/reactotron/plugins/react-native-mmkv.md",sourceDirName:"reactotron/plugins",slug:"/reactotron/plugins/react-native-mmkv",permalink:"/reactotron/plugins/react-native-mmkv",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"MMKV"},sidebar:"Reactotron",previous:{title:"Image Overlay",permalink:"/reactotron/plugins/overlay"},next:{title:"Redux",permalink:"/reactotron/plugins/redux"}},s={},l=[{value:"Installing",id:"installing",level:2},{value:"Usage",id:"usage",level:2},{value:"Advanced Usage",id:"advanced-usage",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"react-native-mmkv",children:"React Native MMKV"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"reactotron-react-native-mmkv"})," plugin allows you to track ",(0,r.jsx)(n.a,{href:"https://github.com/mrousavy/react-native-mmkv",children:"MMKV"})," updates."]}),"\n",(0,r.jsx)(n.h2,{id:"installing",children:"Installing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm i --save-dev reactotron-react-native-mmkv\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"yarn add -D reactotron-react-native-mmkv\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.p,{children:"Import your MMKV storage instance:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { MMKV } from "react-native-mmkv"\nexport const storage = new MMKV()\n'})}),"\n",(0,r.jsxs)(n.p,{children:["To use the ",(0,r.jsx)(n.code,{children:"mmkvPlugin"}),", add the additional plugin on the ",(0,r.jsx)(n.code,{children:"import"})," line."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import Reactotron from "reactotron-react-native"\n// success-line\nimport type { ReactotronReactNative } from "reactotron-react-native"\n// success-line\nimport mmkvPlugin from "reactotron-react-native-mmkv"\n// success-line\nimport { storage } from "./mmkv/storage/instance/location" // <--- update this to your mmkv instance.\n...\nReactotron.configure()\n  // success-line\n  .use(mmkvPlugin<ReactotronReactNative>({ storage }))\n  .connect()\n'})}),"\n",(0,r.jsx)(n.p,{children:"And you're done! Now you can see your MMKV in Reactotron."}),"\n",(0,r.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"mmkvPlugin()"})," accepts an object with an ",(0,r.jsx)(n.code,{children:"ignore"})," key. The value is an array of strings you would like to prevent sending to Reactotron."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'mmkvPlugin<ReactotronReactNative>({\n  storage,\n  ignore: ["secret"],\n})\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var r=t(6540);const a={},o=r.createContext(a);function c(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);