"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[364],{44:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>r});var n=o(4848),i=o(8453);const s={sidebar_position:36},c="ListItem",l={id:"ignite-cli/boilerplate/app/components/ListItem",title:"ListItem",description:"The ListItem component is a component that is used to display a single item in a list. It provides a lot of flexibility in terms of what you can do with it. It can be used to display a simple piece text, or a complex component with multiple actionable and custom styled elements inside.",source:"@site/docs/ignite-cli/boilerplate/app/components/ListItem.md",sourceDirName:"ignite-cli/boilerplate/app/components",slug:"/ignite-cli/boilerplate/app/components/ListItem",permalink:"/ignite-cli/boilerplate/app/components/ListItem",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:36,frontMatter:{sidebar_position:36},sidebar:"Ignite",previous:{title:"Icon",permalink:"/ignite-cli/boilerplate/app/components/Icon"},next:{title:"Radio",permalink:"/ignite-cli/boilerplate/app/components/Radio"}},d={},r=[{value:"Props",id:"props",level:2},{value:"<code>height</code>",id:"height",level:3},{value:"<code>topSeparator</code> and <code>bottomSeparator</code>",id:"topseparator-and-bottomseparator",level:3},{value:"<code>text</code>",id:"text",level:3},{value:"<code>tx</code>",id:"tx",level:3},{value:"<code>children</code>",id:"children",level:3},{value:"<code>txOptions</code>",id:"txoptions",level:3},{value:"<code>textStyle</code>",id:"textstyle",level:3},{value:"<code>TextProps</code>",id:"textprops",level:3},{value:"<code>containerStyle</code>",id:"containerstyle",level:3},{value:"<code>style</code>",id:"style",level:3},{value:"<code>leftIcon</code> and <code>rightIcon</code>",id:"lefticon-and-righticon",level:3},{value:"<code>leftIconColor</code> and <code>rightIconColor</code>",id:"lefticoncolor-and-righticoncolor",level:3},{value:"<code>RightComponent</code> and <code>LeftComponent</code>",id:"rightcomponent-and-leftcomponent",level:3}];function a(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"listitem",children:"ListItem"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"ListItem"})," component is a component that is used to display a single item in a list. It provides a lot of flexibility in terms of what you can do with it. It can be used to display a simple piece text, or a complex component with multiple actionable and custom styled elements inside."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://github.com/user-attachments/assets/009aed59-5597-4d0b-b861-972608ddb8ea",alt:"listitem-component"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"<ListItem height={50} />\n"})}),"\n",(0,n.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,n.jsxs)(t.p,{children:["As the ",(0,n.jsx)(t.code,{children:"ListItem"})," component is interactable, it includes a ",(0,n.jsx)(t.code,{children:"TouchableOpacity"})," component, which means that in addition to the custom props listed here, you can pass any props that are valid for a ",(0,n.jsx)(t.code,{children:"TouchableOpacity"})," component."]}),"\n",(0,n.jsx)(t.h3,{id:"height",children:(0,n.jsx)(t.code,{children:"height"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"height"})," prop is used to set the height of the ",(0,n.jsx)(t.code,{children:"ListItem"})," component. The default is ",(0,n.jsx)(t.code,{children:"56"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"<ListItem height={50} />\n"})}),"\n",(0,n.jsxs)(t.h3,{id:"topseparator-and-bottomseparator",children:[(0,n.jsx)(t.code,{children:"topSeparator"})," and ",(0,n.jsx)(t.code,{children:"bottomSeparator"})]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"topSeparator"})," and ",(0,n.jsx)(t.code,{children:"bottomSeparator"})," props are used to display a separator above or below the ",(0,n.jsx)(t.code,{children:"ListItem"})," component. The default is ",(0,n.jsx)(t.code,{children:"false"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"<ListItem topSeparator={true} bottomSeparator={true} />\n"})}),"\n",(0,n.jsx)(t.h3,{id:"text",children:(0,n.jsx)(t.code,{children:"text"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"text"})," prop is used to display a simple piece of text inside the ",(0,n.jsx)(t.code,{children:"ListItem"})," component."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:'<ListItem text="Hello World" />\n'})}),"\n",(0,n.jsx)(t.h3,{id:"tx",children:(0,n.jsx)(t.code,{children:"tx"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"tx"})," prop is used to display a simple piece of text inside the ",(0,n.jsx)(t.code,{children:"ListItem"})," component. It is used to display a localized string."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:'<ListItem tx="example:helloWorld" />\n'})}),"\n",(0,n.jsx)(t.h3,{id:"children",children:(0,n.jsx)(t.code,{children:"children"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"children"})," prop is used to display components inside the ",(0,n.jsx)(t.code,{children:"ListItem"})," component. Note that these will be nested inside a ",(0,n.jsx)(t.a,{href:"/ignite-cli/boilerplate/app/components/Text",children:(0,n.jsx)(t.code,{children:"Text"})})," component."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"<ListItem height={100}>\n  <Text>Subtext</Text>\n</ListItem>\n"})}),"\n",(0,n.jsx)(t.h3,{id:"txoptions",children:(0,n.jsx)(t.code,{children:"txOptions"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"txOptions"})," prop is used to pass options to the ",(0,n.jsx)(t.code,{children:"tx"})," prop. It is used to display a localized string."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:'<ListItem tx="example:helloWorld" txOptions={{ name: "John" }} />\n'})}),"\n",(0,n.jsx)(t.h3,{id:"textstyle",children:(0,n.jsx)(t.code,{children:"textStyle"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"textStyle"})," prop is used to pass a style to the ",(0,n.jsx)(t.code,{children:"Text"})," component that is used to display the text inside the ",(0,n.jsx)(t.code,{children:"ListItem"})," component."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:'<ListItem text="Hello World" textStyle={{ color: "red" }} />\n'})}),"\n",(0,n.jsx)(t.h3,{id:"textprops",children:(0,n.jsx)(t.code,{children:"TextProps"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"TextProps"})," prop is used to pass any additional props directly to the ",(0,n.jsx)(t.a,{href:"/ignite-cli/boilerplate/app/components/Text",children:(0,n.jsx)(t.code,{children:"Text"})})," component."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:'<ListItem text="Hello World" TextProps={{ weight: "bold" }} />\n'})}),"\n",(0,n.jsx)(t.h3,{id:"containerstyle",children:(0,n.jsx)(t.code,{children:"containerStyle"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"containerStyle"})," prop is used to pass a style to the ",(0,n.jsx)(t.code,{children:"View"})," component that is used to display the ",(0,n.jsx)(t.code,{children:"ListItem"})," component."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:'<ListItem text="Hello World" containerStyle={{ backgroundColor: "red" }} />\n'})}),"\n",(0,n.jsx)(t.h3,{id:"style",children:(0,n.jsx)(t.code,{children:"style"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"style"})," prop is used to pass a style to the ",(0,n.jsx)(t.code,{children:"TouchableOpacity"})," component that is used to display the ",(0,n.jsx)(t.code,{children:"ListItem"})," component."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:'<ListItem text="Hello World" style={{ backgroundColor: "red" }} />\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"lefticon-and-righticon",children:[(0,n.jsx)(t.code,{children:"leftIcon"})," and ",(0,n.jsx)(t.code,{children:"rightIcon"})]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"leftIcon"})," and ",(0,n.jsx)(t.code,{children:"rightIcon"})," props are used to display an icon on the left or right side of the ",(0,n.jsx)(t.code,{children:"ListItem"})," component, respectively."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:'<ListItem text="Hello World" leftIcon="bell" rightIcon="bell" />\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"lefticoncolor-and-righticoncolor",children:[(0,n.jsx)(t.code,{children:"leftIconColor"})," and ",(0,n.jsx)(t.code,{children:"rightIconColor"})]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"leftIconColor"})," and ",(0,n.jsx)(t.code,{children:"rightIconColor"})," props are used to set the color of the icon on the left or right side of the ",(0,n.jsx)(t.code,{children:"ListItem"})," component, respectively."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:'<ListItem\n  text="Hello World"\n  leftIcon="bell"\n  leftIconColor="red"\n  rightIcon="bell"\n  rightIconColor="red"\n/>\n'})}),"\n",(0,n.jsxs)(t.h3,{id:"rightcomponent-and-leftcomponent",children:[(0,n.jsx)(t.code,{children:"RightComponent"})," and ",(0,n.jsx)(t.code,{children:"LeftComponent"})]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"RightComponent"})," and ",(0,n.jsx)(t.code,{children:"LeftComponent"})," props are ",(0,n.jsx)(t.code,{children:"ReactElement"})," objects used to display a component on the left or right side of the ",(0,n.jsx)(t.code,{children:"ListItem"})," component, respectively."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:'<ListItem\n  text="Hello World"\n  LeftComponent={<Text>Left</Text>}\n  RightComponent={<Text>Right</Text>}\n/>\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>c,x:()=>l});var n=o(6540);const i={},s=n.createContext(i);function c(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);