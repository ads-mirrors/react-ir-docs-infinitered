"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[4265],{8236:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>l});var o=n(4848),i=n(8453);const c={sidebar_position:1,title:"Getting Started"},d="Object Detection",s={id:"react-native-mlkit/object-detection/index",title:"Getting Started",description:"Getting Started",source:"@site/docs/react-native-mlkit/object-detection/index.md",sourceDirName:"react-native-mlkit/object-detection",slug:"/react-native-mlkit/object-detection/",permalink:"/react-native-mlkit/object-detection/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Getting Started"},sidebar:"React Native MLKit",previous:{title:"Object Detection",permalink:"/react-native-mlkit/object-detection/list"},next:{title:"Using a custom model",permalink:"/react-native-mlkit/object-detection/using-a-custom-model"}},a={},l=[{value:"Getting Started",id:"getting-started",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"1. Set up the model context provider",id:"1-set-up-the-model-context-provider",level:3},{value:"2. Fetch the model using the <code>useObjectDetectionModel</code> hook, and use it to detect objects in an image",id:"2-fetch-the-model-using-the-useobjectdetectionmodel-hook-and-use-it-to-detect-objects-in-an-image",level:3}];function r(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"object-detection",children:"Object Detection"}),"\n",(0,o.jsx)(t.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,o.jsxs)(t.p,{children:["This is an expo module that lets you use\nthe ",(0,o.jsx)(t.a,{href:"https://developers.google.com/ml-kit/vision/object-detection",children:"MLKit Object Detection"})," library in your Expo app."]}),"\n",(0,o.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(t.p,{children:"Install like any other npm package:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"#yarn\nyarn add @infinitered/react-native-mlkit-object-detection\n\n#npm\nnpm install @infinitered/react-native-mlkit-object-detection\n"})}),"\n",(0,o.jsx)(t.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,o.jsx)(t.h3,{id:"1-set-up-the-model-context-provider",children:"1. Set up the model context provider"}),"\n",(0,o.jsxs)(t.p,{children:["Use the ",(0,o.jsx)(t.code,{children:"useObjectDetectionModels"})," hook to fetch an ",(0,o.jsx)(t.code,{children:"ObjectDetectionModelContextProvider"}),". This will make the models\navailable via React context."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'// App.tsx\n\nimport {\n  AssetRecord,\n  useObjectDetectionModels,\n} from "@infinitered/react-native-mlkit-object-detection";\n\n// For descriptions of options for default models see link below this snipped.\nfunction App() {\n  // fetch the provider component from the hook\n  const { ObjectDetectionModelContextProvider } = useObjectDetectionModels({\n    loadDefaultModel: true,\n    defaultModelOptions: {\n      shouldEnableMultipleObjects: true,\n      shouldEnableClassification: true,\n      detectorMode: "singleImage",\n    },\n  });\n\n  return (\n    <ObjectDetectionModelContextProvider>\n      {/* Rest of your app */}\n    </ObjectDetectionModelContextProvider>\n  );\n}\n'})}),"\n",(0,o.jsxs)(t.h3,{id:"2-fetch-the-model-using-the-useobjectdetectionmodel-hook-and-use-it-to-detect-objects-in-an-image",children:["2. Fetch the model using the ",(0,o.jsx)(t.code,{children:"useObjectDetectionModel"})," hook, and use it to detect objects in an image"]}),"\n",(0,o.jsx)(t.p,{children:"Models can be quite large, take a while to load and can consume a lot of memory. You should consider where in your\napp's lifecycle you load the model."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'// MyComponent.tsx\n\nimport {\n  useObjectDetector,\n  RNMLKitDetectedObject,\n} from "@infinitered/react-native-mlkit-object-detection";\nimport { useEffect } from "react";\n\nfunction MyComponent() {\n  // fetch the model from the hook, if you don\'t pass a model name it will fetch the default MLKit Object Detection model\n  const { model } = useObjectDetector();\n\n  const [modelLoaded, setModelLoaded] = useState(model?.isLoaded() ?? false);\n\n  // Models must be loaded before they can be used. This can be slow, and consume\n  // a lot of resources so consider carefully where and when to load the model\n  useEffect(() => {\n    // Loading models is done asynchronously, so in a useEffect we need to wrap it in an async function\n    async function loadModel() {\n      if (!model || modelLoaded) return;\n      // load the model\n      await model.load();\n      // set the model loaded state to true\n      setModelLoaded(true);\n    }\n\n    loadModel();\n  }, [model, modelLoaded]);\n\n  // the output of the model is an array of `RNMLKitDetectedObject` objects\n  const [result, setResult] = useState<RNMLKitDetectedObject[]>([]);\n\n  useEffect(() => {\n    if (!modelLoaded) return;\n\n    // model.detectObjects is async, so when we use it in a useEffect, we need to wrap it in an async function\n    async function detectObjects(image: AssetRecord) {\n      const result = await model.detectObjects(image);\n      setResult(result);\n    }\n\n    detectObjects();\n  }, [model, modelLoaded]);\n\n  return <View>{JSON.stringify(result)}</View>;\n}\n'})}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["To use a custom TFLite model for inference, see ",(0,o.jsx)(t.a,{href:"./using-a-custom-model",children:"Using a Custom Model"}),"."]})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>s});var o=n(6540);const i={},c=o.createContext(i);function d(e){const t=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),o.createElement(c.Provider,{value:t},e.children)}}}]);