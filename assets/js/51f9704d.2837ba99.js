"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[6580],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>g});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=s(a),d=o,g=c["".concat(l,".").concat(d)]||c[d]||u[d]||i;return a?n.createElement(g,r(r({ref:t},m),{},{components:a})):n.createElement(g,r({ref:t},m))}));function g(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:o,r[1]=p;for(var s=2;s<i;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6929:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var n=a(7462),o=(a(7294),a(3905));const i={sidebar_position:30},r="AutoImage",p={unversionedId:"ignite-cli/boilerplate/app/components/AutoImage",id:"ignite-cli/boilerplate/app/components/AutoImage",title:"AutoImage",description:"Ignite's AutoImage Component is an enhanced version of the built-in React Native Image component. It automatically resizes the image view to fit a max width or height constraint",source:"@site/docs/ignite-cli/boilerplate/app/components/AutoImage.md",sourceDirName:"ignite-cli/boilerplate/app/components",slug:"/ignite-cli/boilerplate/app/components/AutoImage",permalink:"/ignite-cli/boilerplate/app/components/AutoImage",draft:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"Ignite",previous:{title:"Ignite Built-in Components",permalink:"/ignite-cli/boilerplate/app/components/"},next:{title:"Button",permalink:"/ignite-cli/boilerplate/app/components/Button"}},l={},s=[{value:"Props",id:"props",level:2},{value:"<code>maxWidth</code> and <code>maxHeight</code>",id:"maxwidth-and-maxheight",level:3},{value:"Default Image props",id:"default-image-props",level:2},{value:"<code>source</code>",id:"source",level:3},{value:"<code>style</code>",id:"style",level:3},{value:"Notes",id:"notes",level:2}],m={toc:s},c="wrapper";function u(e){let{components:t,...a}=e;return(0,o.kt)(c,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"autoimage"},"AutoImage"),(0,o.kt)("p",null,"Ignite's ",(0,o.kt)("inlineCode",{parentName:"p"},"AutoImage")," Component is an enhanced version of the built-in React Native ",(0,o.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/image"},"Image")," component. It automatically resizes the image view to fit a max width or height constraint"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'<AutoImage\n  source={{ uri: "https://pbs.twimg.com/profile_images/845384502067159040/pqF2RQ2q_400x400.jpg" }}\n  maxWidth={200}\n/>\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"AutoImage")," uses a ",(0,o.kt)("inlineCode",{parentName:"p"},"useAutoImage")," hook to calculate the image's dimensions when you have a specific values you need to constrain the image within. This hook is also available for use in your own components."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { width, height } = useAutoImage(uri, maxWidth, maxHeight)\n")),(0,o.kt)("h2",{id:"props"},"Props"),(0,o.kt)("p",null,"Ignite's ",(0,o.kt)("inlineCode",{parentName:"p"},"AutoImage")," component has two props of its own: ",(0,o.kt)("inlineCode",{parentName:"p"},"maxWidth")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"maxHeight"),"."),(0,o.kt)("h3",{id:"maxwidth-and-maxheight"},(0,o.kt)("inlineCode",{parentName:"h3"},"maxWidth")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"maxHeight")),(0,o.kt)("p",null,"These props are used to constrain the image to a specific size. Use ",(0,o.kt)("inlineCode",{parentName:"p"},"maxWidth")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"maxHeight")," to set the maximum width or height of the image, and it will resize to whichever dimension you specify without skewing the aspect ratio. e.g. If the image is 300w x 200h, and you set ",(0,o.kt)("inlineCode",{parentName:"p"},"maxWidth={200}"),", the image will be resized to 200w x 133h."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'<AutoImage\n  source={{ uri: "https://pbs.twimg.com/profile_images/845384502067159040/pqF2RQ2q_400x400.jpg" }}\n  maxWidth={200}\n  maxHeight={200}\n/>\n')),(0,o.kt)("h2",{id:"default-image-props"},"Default Image props"),(0,o.kt)("p",null,"As ",(0,o.kt)("inlineCode",{parentName:"p"},"AutoImage")," is a wrapper around React Native's ",(0,o.kt)("inlineCode",{parentName:"p"},"Image")," component, it also accepts all of the props that ",(0,o.kt)("inlineCode",{parentName:"p"},"Image")," accepts. See the ",(0,o.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/image"},"React Native Image documentation")," for more information."),(0,o.kt)("h3",{id:"source"},(0,o.kt)("inlineCode",{parentName:"h3"},"source")),(0,o.kt)("p",null,"As with React Native's built in Image component, the ",(0,o.kt)("inlineCode",{parentName:"p"},"source")," prop is always required. This can be ",(0,o.kt)("em",{parentName:"p"},"almost")," anything that conforms to ReactNative's ",(0,o.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/image#imagesource"},"ImageSource")," type. (See ",(0,o.kt)("a",{parentName:"p",href:"#Notes"},"Notes")," below for caveats.)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<AutoImage source={logoIgnite} />\n")),(0,o.kt)("h3",{id:"style"},(0,o.kt)("inlineCode",{parentName:"h3"},"style")),(0,o.kt)("p",null,"Setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"style")," prop will override the default styles. With ",(0,o.kt)("inlineCode",{parentName:"p"},"AutoImage"),", you generally only need to specify width ",(0,o.kt)("em",{parentName:"p"},"or")," height with dynamically loaded images. Setting both will override the resizing of ",(0,o.kt)("inlineCode",{parentName:"p"},"AutoImage")," altogether, and if that is needed it's best to just use the default React Native ",(0,o.kt)("inlineCode",{parentName:"p"},"Image")," component."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<AutoImage source={logoIgnite} style={{ width: 200 }} />\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<AutoImage source={logoIgnite} style={{ height: 200 }} />\n")),(0,o.kt)("h2",{id:"notes"},"Notes"),(0,o.kt)("p",null,"As noted above, the ",(0,o.kt)("inlineCode",{parentName:"p"},"source")," prop can be almost anything, the one exception being an array of objects, which ",(0,o.kt)("inlineCode",{parentName:"p"},"AutoImage")," doesn't support. See the React Native ",(0,o.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/image#source"},"Image#source")," documentation for more information."))}u.isMDXComponent=!0}}]);