"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[3772],{8453:(o,e,t)=>{t.d(e,{R:()=>i,x:()=>a});var n=t(6540);const r={},s=n.createContext(r);function i(o){const e=n.useContext(s);return n.useMemo((function(){return"function"==typeof o?o(e):{...e,...o}}),[e,o])}function a(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(r):o.components||r:i(o.components),n.createElement(s.Provider,{value:e},o.children)}},9279:(o,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"reactotron/plugins/storybook","title":"Storybook","description":"reactotron-react-native ships with a plugin called storybook.","source":"@site/docs/reactotron/plugins/storybook.md","sourceDirName":"reactotron/plugins","slug":"/reactotron/plugins/storybook","permalink":"/reactotron/plugins/storybook","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Storybook"},"sidebar":"Reactotron","previous":{"title":"Redux","permalink":"/reactotron/plugins/redux"},"next":{"title":"Global Errors","permalink":"/reactotron/plugins/track-global-errors"}}');var r=t(4848),s=t(8453);const i={title:"Storybook"},a="Storybook (React Native Only)",c={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Usage",id:"usage",level:2}];function u(o){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...o.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"storybook-react-native-only",children:"Storybook (React Native Only)"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"reactotron-react-native"})," ships with a plugin called ",(0,r.jsx)(e.code,{children:"storybook"}),"."]}),"\n",(0,r.jsx)(e.p,{children:"This plugin, when configured properly, allows the switching to Storybook from the Reactotron interface"}),"\n",(0,r.jsx)(e.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(e.p,{children:["The storybook plugin gets turned on automatically when you use ",(0,r.jsx)(e.code,{children:".useReactNative()"}),". If you don't want to use that method you can manually wire up the plugin:"]}),"\n",(0,r.jsxs)(e.p,{children:["Wherever you setup your Reactotron in your app, you also add the additional plugin on the ",(0,r.jsx)(e.code,{children:"import"})," line."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:'import Reactotron, { storybook } from "reactotron-react-native"\n'})}),"\n",(0,r.jsx)(e.p,{children:"Next, add it as a plugin to Reactotron."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"Reactotron.configure()\n  .useReactNative({\n    storybook: true,\n  })\n  .connect()\n"})}),"\n",(0,r.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(e.p,{children:"Once the plugin is configured you have to wrap your entire app in a HOC provided by Reactotron. In addition to that Storybook requires some configuration. Here is an example:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"import { getStorybookUI, configure } from '@storybook/react-native'\n\n{...}\n\nconfigure(() => {\n  require('../../storybook/stories') // This should point to your \"root\" set of stories\n}, module)\n\nconst StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true }) // This configuration can be changed based upon personal wants\n\nclass StorybookUIHMRRoot extends Component {\n  render () {\n    return <StorybookUIRoot />\n  }\n}\n\n// Assuming you have Reactotron on console.tron\nexport default console.tron.storybookSwitcher(StorybookUIHMRRoot)(RootContainer)\n"})})]})}function d(o={}){const{wrapper:e}={...(0,s.R)(),...o.components};return e?(0,r.jsx)(e,{...o,children:(0,r.jsx)(u,{...o})}):u(o)}}}]);