"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[761],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={title:"colors.ts"},i="Colors & Palettes",l={unversionedId:"ignite-cli/boilerplate/app/theme/colors.ts",id:"ignite-cli/boilerplate/app/theme/colors.ts",title:"colors.ts",description:"In app/theme/colors.ts, we define a palette of colors and the semantic names to be used in the app. The palette is meant to be a simple list of colors, and the semantic names are meant to be used throughout the app. This matches how designers often think of colors & palettes, and lets us match designs which define these easily.",source:"@site/docs/ignite-cli/boilerplate/app/theme/colors.ts.md",sourceDirName:"ignite-cli/boilerplate/app/theme",slug:"/ignite-cli/boilerplate/app/theme/colors.ts",permalink:"/ignite-cli/boilerplate/app/theme/colors.ts",draft:!1,tags:[],version:"current",frontMatter:{title:"colors.ts"},sidebar:"Ignite",previous:{title:"Theming Ignite Apps",permalink:"/ignite-cli/boilerplate/app/theme/Theming"},next:{title:"spacing.ts",permalink:"/ignite-cli/boilerplate/app/theme/spacing.ts"}},s={},c=[],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"colors--palettes"},"Colors & Palettes"),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"app/theme/colors.ts"),", we define a palette of colors and the semantic names to be used in the app. The palette is meant to be a simple list of colors, and the semantic names are meant to be used throughout the app. This matches how designers often think of colors & palettes, and lets us match designs which define these easily."),(0,o.kt)("p",null,"The palette color names are meant to be semantically neutral names matching the color. For example, ",(0,o.kt)("inlineCode",{parentName:"p"},"neutral100")," defines a neutral color, but has no specific semantic meaning for its use. If you find yourself using a color in multiple places for the same purpose (e.g. background, border, text), define a semantic color and replace the palette color usage with the semantic one. For example, if you are styling all your text field components with a border of ",(0,o.kt)("inlineCode",{parentName:"p"},"colors.accent100"),", define a semantic color such as ",(0,o.kt)("inlineCode",{parentName:"p"},"textFieldBorder")," that is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"accent100"),". You would then use ",(0,o.kt)("inlineCode",{parentName:"p"},"colors.textFieldBorder")," in your components in place of the ",(0,o.kt)("inlineCode",{parentName:"p"},"colors.accent100")," color."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<TextField style={{ borderColor: colors.border }} />\n")))}u.isMDXComponent=!0}}]);