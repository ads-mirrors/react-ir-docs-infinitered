"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[8372],{3795:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"react-native-mlkit/image-labeling/using-a-custom-model","title":"Using a Custom Model","description":"MLKit includes a general-purpose image labeling model that recognizes more than 400 entities covering common concepts in","source":"@site/docs/react-native-mlkit/image-labeling/using-a-custom-model.md","sourceDirName":"react-native-mlkit/image-labeling","slug":"/react-native-mlkit/image-labeling/using-a-custom-model","permalink":"/react-native-mlkit/image-labeling/using-a-custom-model","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":99,"frontMatter":{"sidebar_position":99},"sidebar":"React Native MLKit","previous":{"title":"Image Labeler Options","permalink":"/react-native-mlkit/image-labeling/image-labeler-options"},"next":{"title":"Object Detection","permalink":"/react-native-mlkit/object-detection/list"}}');var i=o(4848),s=o(8453);const l={sidebar_position:99},r="Using a Custom Model",a={},c=[{value:"Compatible Models",id:"compatible-models",level:2},{value:"Implementation Steps",id:"implementation-steps",level:2},{value:"1. Add your model to the project",id:"1-add-your-model-to-the-project",level:3},{value:"2. Configure Metro bundler",id:"2-configure-metro-bundler",level:3},{value:"3. Configure the model in your app",id:"3-configure-the-model-in-your-app",level:3},{value:"4. Use the model in your components",id:"4-use-the-model-in-your-components",level:3},{value:"Model Options",id:"model-options",level:2},{value:"Updating Model Options",id:"updating-model-options",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"using-a-custom-model",children:"Using a Custom Model"})}),"\n",(0,i.jsx)(n.p,{children:"MLKit includes a general-purpose image labeling model that recognizes more than 400 entities covering common concepts in\nphotos. However, you may want to use your own custom model for specific use cases."}),"\n",(0,i.jsx)(n.h2,{id:"compatible-models",children:"Compatible Models"}),"\n",(0,i.jsx)(n.p,{children:"Your custom model needs to be compatible with MLKit's Image Labeling API:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The model must be a TensorFlow Lite model (.tflite)"}),"\n",(0,i.jsx)(n.li,{children:"The model must be configured for classification tasks"}),"\n",(0,i.jsx)(n.li,{children:"The output should provide class labels and confidence scores"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Refer to ",(0,i.jsx)(n.a,{href:"https://developers.google.com/ml-kit/custom-models",children:"Custom Models with MLKit"})," for detailed information on\nMLKit model compatibility."]}),"\n",(0,i.jsx)(n.h2,{id:"implementation-steps",children:"Implementation Steps"}),"\n",(0,i.jsx)(n.h3,{id:"1-add-your-model-to-the-project",children:"1. Add your model to the project"}),"\n",(0,i.jsx)(n.p,{children:"Place your model in your project's assets directory:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cp ~/my-custom-model.tflite ./assets/models/my-custom-model.tflite\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-configure-metro-bundler",children:"2. Configure Metro bundler"}),"\n",(0,i.jsx)(n.p,{children:"Update your metro.config.js to handle .tflite files:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// metro.config.js\nconst { getDefaultConfig } = require("expo/metro-config");\n\nconst config = getDefaultConfig(__dirname);\n\nconfig.resolver.assetExts.push("tflite");\n\nmodule.exports = config;\n\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-configure-the-model-in-your-app",children:"3. Configure the model in your app"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { ImageLabelingConfig } from '@infinitered/react-native-mlkit-image-labeling';\n\nconst MODELS: ImageLabelingConfig = {\n  customModel: {\n    model: require(\"./assets/models/my-custom-model.tflite\"),\n    options: {\n      maxResultCount: 5,\n      confidenceThreshold: 0.7,\n    },\n  },\n};\n\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-use-the-model-in-your-components",children:"4. Use the model in your components"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'function CustomModelClassifier() {\n  const classifier = useImageLabeling("customModel");\n\n  const classify = async (imageUri: string) => {\n    try {\n      const results = await classifier.classifyImage(imageUri);\n      // Handle classification results\n    } catch (error) {\n      // Handle errors\n    }\n  };\n}\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"model-options",children:"Model Options"}),"\n",(0,i.jsx)(n.p,{children:"You can configure your model's behavior using these options:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"type CustomImageLabelerOptions = {\n  maxResultCount?: number; // Maximum number of classifications to return\n  confidenceThreshold?: number; // Minimum confidence score (0-1) for results\n};\n"})}),"\n",(0,i.jsx)(n.h2,{id:"updating-model-options",children:"Updating Model Options"}),"\n",(0,i.jsx)(n.p,{children:"You can update the model's options at runtime:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"await classifier.updateOptionsAndReload({\n  maxResultCount: 3,\n  confidenceThreshold: 0.8,\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["See the ",(0,i.jsx)(n.a,{href:"https://docs.expo.dev/guides/customizing-metro/#adding-more-file-extensions-to-assetexts",children:"Expo Docs"})," for\ndetailed instructions on ",(0,i.jsx)(n.a,{href:"https://docs.expo.dev/guides/customizing-metro",children:"customizing metro"}),"."]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>r});var t=o(6540);const i={},s=t.createContext(i);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);