"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[6459],{9495:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=t(4848),i=t(8453);const a={sidebar_position:3},l="Ignite Built-in Components",s={id:"ignite-cli/boilerplate/app/components/Components",title:"Ignite Built-in Components",description:"Ignite comes with a number of customizable built-in React Native components -- sort of a lightweight design system, in a way. It's the system we (at Infinite Red) tend to use the most often with our own custom mobile designs, and is designed to emphasize flexibility and customizability over out-of-the-box power.",source:"@site/docs/ignite-cli/boilerplate/app/components/Components.md",sourceDirName:"ignite-cli/boilerplate/app/components",slug:"/ignite-cli/boilerplate/app/components/",permalink:"/ignite-cli/boilerplate/app/components/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"Ignite",previous:{title:"app",permalink:"/ignite-cli/boilerplate/app/"},next:{title:"AutoImage",permalink:"/ignite-cli/boilerplate/app/components/AutoImage"}},r={},c=[{value:"Components",id:"components",level:2},{value:"AutoImage",id:"autoimage",level:3},{value:"Button",id:"button",level:3},{value:"Card",id:"card",level:3},{value:"Checkbox",id:"checkbox",level:3},{value:"EmptyState",id:"emptystate",level:3},{value:"Header",id:"header",level:3},{value:"Icon",id:"icon",level:3},{value:"Radio",id:"radio",level:3},{value:"Screen",id:"screen",level:3},{value:"Switch",id:"switch",level:3},{value:"Text",id:"text",level:3},{value:"TextField",id:"textfield",level:3},{value:"Custom Components",id:"custom-components",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"ignite-built-in-components",children:"Ignite Built-in Components"}),"\n",(0,o.jsxs)(n.p,{children:["Ignite comes with a number of customizable built-in React Native components -- sort of a lightweight design system, in a way. It's the system we (at Infinite Red) tend to use the most often with our own custom mobile designs, and is designed to emphasize flexibility and customizability ",(0,o.jsx)(n.em,{children:"over"})," out-of-the-box power."]}),"\n",(0,o.jsxs)(n.p,{children:["There are a number of other options out there that work great with Ignite -- ",(0,o.jsx)(n.a,{href:"https://akveo.github.io/react-native-ui-kitten/",children:"UI Kitten"}),", ",(0,o.jsx)(n.a,{href:"https://reactnativeelements.com/",children:"RN Elements"}),", and more. But if you're building something with a totally custom design, Ignite's built-in components work great."]}),"\n",(0,o.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,o.jsx)(n.p,{children:"Here's a summary of each component. Click through to view detailed documentation and code examples!"}),"\n",(0,o.jsx)(n.h3,{id:"autoimage",children:"AutoImage"}),"\n",(0,o.jsxs)(n.p,{children:["This is a wrapper around React Native's ",(0,o.jsx)(n.a,{href:"https://reactnative.dev/docs/image",children:"Image"})," component, which automatically resizes the image to fit the container."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<AutoImage\n  source={{ uri: "https://pbs.twimg.com/profile_images/845384502067159040/pqF2RQ2q_400x400.jpg" }}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/AutoImage",children:"Full AutoImage Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"button",children:"Button"}),"\n",(0,o.jsxs)(n.p,{children:["This is a component that renders a ",(0,o.jsx)(n.a,{href:"https://reactnative.dev/docs/touchableopacity",children:(0,o.jsx)(n.code,{children:"TouchableOpacity"})})," with given text or children."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Button\n  text="Click It"\n  tx="button:clickIt"\n  preset="primary"\n  onPress={() => Alert.alert("pressed")}\n  style={[{ paddingVertical: 100 }, { borderRadius: 0 }]}\n  textStyle={[{ fontSize: 20 }, { color: "#a511dc" }]}\n/>\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Button onPress={() => Alert.alert("pressed")}>\n  <Text>Click It</Text>\n</Button>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Button",children:"Full Button Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"card",children:"Card"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Card"})," component is useful for displaying related information in a contained way. Where you'll use ",(0,o.jsx)(n.code,{children:"ListItem"})," for horizontal information, ",(0,o.jsx)(n.code,{children:"Card"})," can be used for vertical information."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Card\n  preset="reversed"\n  verticalAlignment="space-between"\n  LeftComponent={<Text>Left</Text>}\n  RightComponent={<Text>Right</Text>}\n  heading="Card Heading"\n  headingStyle={{ color: "#a511dc" }}\n  HeadingTextProps={{ weight: "bold" }}\n  content="Card Content"\n  contentStyle={{ color: "#a511dc" }}\n  ContentTextProps={{ weight: "light" }}\n  footer="Card Footer"\n  footerStyle={{ color: "#a511dc" }}\n  FooterTextProps={{ weight: "medium" }}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Card",children:"Full Card Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"checkbox",children:"Checkbox"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Checkbox"})," component is useful for displaying a user's choice for a boolean value."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Checkbox\n  value={value}\n  icon="check"\n  onValueChange={setValue}\n  labelTx="signup:rememberMe"\n  labelStyle={{ color: "#a511dc" }}\n  containerStyle={{ backgroundColor: "#fff" }}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Checkbox",children:"Full Checkbox Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"emptystate",children:"EmptyState"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"EmptyState"})," component can be used when there is no data to display and direct the user on how to proceed."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<EmptyState\n  preset="default"\n  style={{ padding: 10 }}\n  imageSource={require("@assets/images/sad-face.png")}\n  imageStyle={{ height: 400, width: 400 }}\n  ImageProps={{ resizeMode: "contain" }}\n  heading="EmptyState Heading"\n  headingStyle={{ color: "#a511dc" }}\n  HeadingTextProps={{ weight: "bold" }}\n  content="EmptyState Content"\n  contentStyle={{ color: "#a511dc" }}\n  ContentTextProps={{ weight: "light" }}\n  button="Press here"\n  buttonOnPress={handleButtonPress}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/EmptyState",children:"Full EmptyState Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"header",children:"Header"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Header"})," component is a component that will appear at the top of your screen. It is used to hold navigation buttons and the screen title."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Header\n  headerTx="header:title"\n  headerText="Header Title"\n  leftIcon="back"\n  rightIcon="bullet"\n  onLeftPress={() => navigation.goBack()}\n  onRightPress={() => Alert.alert("pressed")}\n  style={{ backgroundColor: "purple" }}\n  titleStyle={{ color: "white" }}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Header",children:"Full Header Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"icon",children:"Icon"}),"\n",(0,o.jsx)(n.p,{children:"This is a component that renders an icon."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Icon\n  icon="back"\n  color="#a511dc"\n  size={30}\n  containerStyle={{ backgroundColor: "#fff" }}\n  style={{ resizeMode: "contain" }}\n  onPress={() => Alert.alert("pressed")}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Icon",children:"Full Icon Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"radio",children:"Radio"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Radio"})," component is useful for displaying a user's choice for a boolean value."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Radio\n  value={value}\n  onValueChange={setValue}\n  labelTx="signup:rememberMe"\n  labelStyle={{ color: "#a511dc" }}\n  containerStyle={{ backgroundColor: "#fff" }}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Radio",children:"Full Radio Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"screen",children:"Screen"}),"\n",(0,o.jsxs)(n.p,{children:["This is a component that renders a screen. It is used to wrap your entire screen, and handles scrolling, ",(0,o.jsx)(n.a,{href:"https://reactnavigation.org/docs/handling-safe-area/",children:"safe areas"}),", and keyboard avoiding behavior."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Screen preset="scroll">\n  <Header headerTitle="screen" />\n  // ... content here ...\n</Screen>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Screen",children:"Full Screen Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"switch",children:"Switch"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Switch"})," component is useful for displaying a user's choice for a boolean value."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Switch\n  value={value}\n  accessibilityMode="icon"\n  onValueChange={setValue}\n  labelTx="signup:rememberMe"\n  labelStyle={{ color: "#a511dc" }}\n  containerStyle={{ backgroundColor: "#fff" }}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Switch",children:"Full Switch Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"text",children:"Text"}),"\n",(0,o.jsx)(n.p,{children:"This is an enhanced version of the built-in React Native Text component. It adds internationalization and property presets."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Text\n  preset="header"\n  tx="welcome:header"\n  txOptions={{\n    name: currentUser.name,\n  }}\n  style={$header}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Text",children:"Full Text Component Documentation"})}),"\n",(0,o.jsx)(n.h3,{id:"textfield",children:"TextField"}),"\n",(0,o.jsxs)(n.p,{children:["This component renders a View with a ",(0,o.jsx)(n.a,{href:"https://reactnative.dev/docs/textinput",children:(0,o.jsx)(n.code,{children:"TextInput"})})," and a text label."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'const [input, setInput] = useState("")\nconst inputRef = useRef()\n<TextField\n  value={input}\n  onChangeText={setInput}\n  labelTx="signup:name"\n  placeholderTx="signup:nameplaceholder"\n  style={$header}\n  inputStyle={$inputStyle}\n  preset="default"\n  forwardedRef={inputRef}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/TextField",children:"Full Text Component Documentation"})}),"\n",(0,o.jsx)(n.h2,{id:"custom-components",children:"Custom Components"}),"\n",(0,o.jsx)(n.p,{children:"Ignite includes a generator for creating custom components. If the built in components don't fit your needs, you can create your own."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"npx ignite-cli generate component MyCustomButton"})}),"\n",(0,o.jsxs)(n.p,{children:["Running the generator will create a new component in the ",(0,o.jsx)(n.code,{children:"components"})," directory."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"-- app\n  -- components\n    -- MyCustomButton.tsx\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var o=t(6540);const i={},a=o.createContext(i);function l(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);