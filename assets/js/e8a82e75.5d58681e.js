"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[7940],{880:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"react-native-mlkit/contributing/changesets-versions-and-releases","title":"Changesets, Versions, and Releases","description":"Steps for Contribution and Release","source":"@site/docs/react-native-mlkit/contributing/changesets-versions-and-releases.md","sourceDirName":"react-native-mlkit/contributing","slug":"/react-native-mlkit/contributing/changesets-versions-and-releases","permalink":"/react-native-mlkit/contributing/changesets-versions-and-releases","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":99,"frontMatter":{"sidebar_position":99},"sidebar":"React Native MLKit","previous":{"title":"Adding a new module","permalink":"/react-native-mlkit/contributing/adding-a-new-module"},"next":{"title":"Editing Native Code","permalink":"/react-native-mlkit/contributing/editing-native-code"}}');var i=s(4848),a=s(8453);const r={sidebar_position:99},o="Changesets, Versions, and Releases",c={},l=[{value:"Steps for Contribution and Release",id:"steps-for-contribution-and-release",level:2},{value:"Using Changesets",id:"using-changesets",level:2},{value:"Getting Started with Changesets",id:"getting-started-with-changesets",level:3},{value:"Important Considerations",id:"important-considerations",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"changesets-versions-and-releases",children:"Changesets, Versions, and Releases"})}),"\n",(0,i.jsx)(n.h2,{id:"steps-for-contribution-and-release",children:"Steps for Contribution and Release"}),"\n",(0,i.jsx)(n.p,{children:"As this is a monorepo with many packages that depend on one another, we use an automated system to manage versioning and\nreleases."}),"\n",(0,i.jsx)(n.p,{children:"The good news is most of this is automated for you! here is a quick overview of the process:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Make Changes"}),": Implement your feature or bug fix in your branch."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Include a Changeset"}),": Necessary for all changes requiring a version bump. Run ",(0,i.jsx)(n.code,{children:"yarn changeset"})," to generate one."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Open a PR against main"}),": Automated tests and builds will verify your changes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Merge the PR"}),": Via GitHub Actions ",(0,i.jsx)(n.code,{children:"changesets"}),' checks for version bumps and automatically creates a "Version\nPackages" PR against main']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:'Merging the "Version Packages" PR to Publish Packages'}),": Merging the Version Packages PR triggers our automated\nNPM publishing process."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"using-changesets",children:"Using Changesets"}),"\n",(0,i.jsx)(n.p,{children:"Changesets is a tool we use to manage versioning and changelogs in our monorepo efficiently. It allows us to track\nchanges to the packages, ensuring that when we release updates, all dependent packages are versioned correctly, and\ntheir changelogs are updated appropriately."}),"\n",(0,i.jsx)(n.h3,{id:"getting-started-with-changesets",children:"Getting Started with Changesets"}),"\n",(0,i.jsx)(n.p,{children:"When you open a PR with a change or a new feature that you believe should trigger a version update of a package (or\npackages),\nyou'll need to include a changeset in your PR."}),"\n",(0,i.jsx)(n.p,{children:"A changeset is essentially a record of what packages need to be released and how (major, minor, or patch)."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Creating a Changeset"})}),"\n",(0,i.jsx)(n.p,{children:"After making your changes in the repository, run the following command at the root:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn changeset\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This command will prompt you to select the packages that have changed, as well as the type of change (major, minor,\nor patch). It will then generate a ",(0,i.jsx)(n.code,{children:".md"})," file in the ",(0,i.jsx)(n.code,{children:".changeset"})," directory describing these changes. Include this\nfile in your pull request."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"It shouldn't be necessary to manually edit the changeset file."})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Reviewing Changesets in PRs"})}),"\n",(0,i.jsx)(n.p,{children:"Changesets included in pull requests are reviewed as part of the code review process. This ensures that the\nversioning and changelogs will accurately reflect the changes once merged."}),"\n",(0,i.jsx)(n.p,{children:"As a reviewer, be on the lookout for changes in PRs that will require version bumps and ensure they are included\nwhen necessary."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Releasing Changes"})}),"\n",(0,i.jsxs)(n.p,{children:["Our release process is automated through GitHub Actions and utilizes the custom ",(0,i.jsx)(n.code,{children:"release"})," script defined in\nour ",(0,i.jsx)(n.code,{children:"scripts"})," directory. This process includes building the project, publishing updated packages to npm, and pushing\ntags to the repository."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"yarn release"})," command executes the steps defined in ",(0,i.jsx)(n.code,{children:"scripts/release.mjs"}),", handling the complexities of\nbuilding, publishing,\nand updating the repository accordingly."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"important-considerations",children:"Important Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ensure you run ",(0,i.jsx)(n.code,{children:"yarn changeset"})," after making your changes but before creating your pull request."]}),"\n",(0,i.jsxs)(n.li,{children:["For a detailed explanation of the impact of your changes (major, minor, or patch), refer\nto ",(0,i.jsx)(n.a,{href:"https://semver.org/",children:"Semantic Versioning"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The configuration for changesets can be found in ",(0,i.jsx)(n.code,{children:".changeset/config.json"}),". This configuration controls aspects like\nwhich branches are used for releases, commit messages, and more."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"By adhering to these guidelines and utilizing changesets, you help maintain the project's versioning integrity and\ncontribute to the clear documentation of changes across releases."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(6540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);