"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[8122],{8327:(n,o,e)=>{e.r(o),e.d(o,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>a});var i=e(4848),s=e(8453);const r={},c="config",t={id:"gluegun/toolbox-api/config",title:"config",description:"You can have your plugin authors configure the behavior of your CLI by providing a configuration file in the root of any plugin. You can also provide one in the root level of the main CLI.",source:"@site/docs/gluegun/toolbox-api/config.md",sourceDirName:"gluegun/toolbox-api",slug:"/gluegun/toolbox-api/config",permalink:"/gluegun/toolbox-api/config",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"Gluegun",previous:{title:"Inside the Gluegun Toolbox",permalink:"/gluegun/toolbox-api/"},next:{title:"filesystem",permalink:"/gluegun/toolbox-api/filesystem"}},l={},a=[];function u(n){const o={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.h1,{id:"config",children:"config"}),"\n",(0,i.jsx)(o.p,{children:"You can have your plugin authors configure the behavior of your CLI by providing a configuration file in the root of any plugin. You can also provide one in the root level of the main CLI."}),"\n",(0,i.jsx)(o.p,{children:"This is an object. Each plugin will have its own root level key."}),"\n",(0,i.jsxs)(o.p,{children:["In ",(0,i.jsx)(o.code,{children:"movies.config.js"}),":"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-js",children:"module.exports = {\n  name: 'movies',\n  defaults: {\n    movie: {\n      cache: '~/.movies/cache',\n    },\n    another: {\n      count: 100,\n    },\n  },\n}\n"})}),"\n",(0,i.jsxs)(o.p,{children:["In ",(0,i.jsx)(o.code,{children:"movies-imdb.config.js"}),":"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-js",children:"module.exports = {\n  name: 'movies-imdb',\n  defaults: {\n    fun: true,\n    level: 10,\n  },\n}\n"})}),"\n",(0,i.jsx)(o.p,{children:"It takes the plugin's defaults, and merges the user's changes overtop."}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-js",children:"module.exports = async (toolbox) => {\n  toolbox.config.movies // { fun: true, level: 10 }\n}\n"})}),"\n",(0,i.jsxs)(o.p,{children:["If you'd like to load your own config files, use the ",(0,i.jsx)(o.code,{children:"loadConfig"})," function included in the config object which is powered by ",(0,i.jsx)(o.a,{href:"https://github.com/davidtheclark/cosmiconfig",children:"cosmiconfig"}),":"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-js",children:"module.exports = {\n  run: async (toolbox) => {\n    const {\n      config: { loadConfig },\n      print: { info },\n      runtime: { brand },\n    } = toolbox\n\n    // use cosmiconfig directly: brand (string) & directory (string)\n    const myConfig = loadConfig(brand, process.cwd())\n    // or\n    const myConfig = loadConfig('movie', '~/.myconfig/')\n\n    // now access myConfig\n    info(myConfig.shirtSize)\n\n    // if you want to load multiple configs and have them override:\n    const currentFolder = process.cwd()\n    const myConfig = {\n      ...loadConfig('movies', '~/.myconfig/'),\n      ...loadConfig('movies', '~/configurations/myconfig/'),\n      ...loadConfig('movies', currentFolder),\n    }\n  },\n}\n"})}),"\n",(0,i.jsx)(o.p,{children:"By default, Cosmiconfig will start where you tell it to start and search up the directory tree for the following:"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"a package.json property"}),"\n",(0,i.jsx)(o.li,{children:'a JSON or YAML, extensionless "rc file"'}),"\n",(0,i.jsx)(o.li,{children:'an "rc file" with the extensions .json, .yaml, .yml, or .js.'}),"\n",(0,i.jsx)(o.li,{children:"a .config.js CommonJS module"}),"\n"]}),"\n",(0,i.jsx)(o.p,{children:'For example, if your module\'s name is "soursocks", cosmiconfig will search up the directory tree for configuration in the following places:'}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"a soursocks property in package.json"}),"\n",(0,i.jsx)(o.li,{children:"a .soursocksrc file in JSON or YAML format"}),"\n",(0,i.jsx)(o.li,{children:"a .soursocksrc.json file"}),"\n",(0,i.jsx)(o.li,{children:"a .soursocksrc.yaml, .soursocksrc.yml, or .soursocksrc.js file"}),"\n",(0,i.jsx)(o.li,{children:"a soursocks.config.js file exporting a JS object"}),"\n"]}),"\n",(0,i.jsx)(o.p,{children:"Cosmiconfig continues to search up the directory tree, checking each of these places in each directory, until it finds some acceptable configuration (or hits the home directory)."})]})}function d(n={}){const{wrapper:o}={...(0,s.R)(),...n.components};return o?(0,i.jsx)(o,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},8453:(n,o,e)=>{e.d(o,{R:()=>c,x:()=>t});var i=e(6540);const s={},r=i.createContext(s);function c(n){const o=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(o):{...o,...n}}),[o,n])}function t(n){let o;return o=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),i.createElement(r.Provider,{value:o},n.children)}}}]);