"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[8143],{1840:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"ignite-cli/boilerplate/app/devtools/Devtools","title":"Devtools Folder","description":"Reactotron","source":"@site/docs/ignite-cli/boilerplate/app/devtools/Devtools.md","sourceDirName":"ignite-cli/boilerplate/app/devtools","slug":"/ignite-cli/boilerplate/app/devtools/","permalink":"/ignite-cli/boilerplate/app/devtools/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"Ignite","previous":{"title":"context","permalink":"/ignite-cli/boilerplate/app/context/"},"next":{"title":"i18n","permalink":"/ignite-cli/boilerplate/app/i18n/Internationalization"}}');var i=o(4848),r=o(8453);const a={},s="Devtools Folder",c={},l=[{value:"Reactotron",id:"reactotron",level:2},{value:"ReactotronConfig.ts",id:"reactotronconfigts",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"devtools-folder",children:"Devtools Folder"})}),"\n",(0,i.jsx)(t.h2,{id:"reactotron",children:"Reactotron"}),"\n",(0,i.jsx)(t.p,{children:"Ignite comes with Reactotron support for debugging your app.\nBy default, Reactotron is configured to work with web and mobile apps and is configured with a few plugins and commands we think are useful."}),"\n",(0,i.jsx)(t.h3,{id:"reactotronconfigts",children:"ReactotronConfig.ts"}),"\n",(0,i.jsxs)(t.p,{children:["There are a few custom commands included with this configuration. You can use ",(0,i.jsx)(t.code,{children:"reactotron.onCustomCommand"})," to add your own own custom debugging tools to Reactotron. Here is an example:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:'reactotron.onCustomCommand({\n  title: "Reset Navigation State",\n  description: "Resets the navigation state",\n  command: "resetNavigation",\n  handler: () => {\n    Reactotron.log("resetting navigation state")\n    resetRoot({ index: 0, routes: [] })\n  },\n})\n'})}),"\n",(0,i.jsxs)(t.p,{children:["For more info check out the ",(0,i.jsx)(t.a,{href:"https://docs.infinite.red/reactotron/",children:"Reactotron Documentation"})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>s});var n=o(6540);const i={},r=n.createContext(i);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);