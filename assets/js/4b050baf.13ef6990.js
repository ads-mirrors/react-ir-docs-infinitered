"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[9775],{8102:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"ignite-cli/boilerplate/app/components/Card","title":"Card","description":"The Card component is intended to be used for vertically aligned related content. It is a container that can hold a heading, content, and footer. It can also hold a left and right component that will be aligned to the left and right of the card body.","source":"@site/docs/ignite-cli/boilerplate/app/components/Card.md","sourceDirName":"ignite-cli/boilerplate/app/components","slug":"/ignite-cli/boilerplate/app/components/Card","permalink":"/ignite-cli/boilerplate/app/components/Card","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":32,"frontMatter":{"sidebar_position":32},"sidebar":"Ignite","previous":{"title":"Button","permalink":"/ignite-cli/boilerplate/app/components/Button"},"next":{"title":"Checkbox","permalink":"/ignite-cli/boilerplate/app/components/Checkbox"}}');var d=t(4848),r=t(8453);const c={sidebar_position:32},s="Card",i={},a=[{value:"Props",id:"props",level:2},{value:"<code>preset</code>",id:"preset",level:3},{value:"<code>verticalAlignment</code>",id:"verticalalignment",level:3},{value:"<code>LeftComponent</code> &amp; <code>RightComponent</code>",id:"leftcomponent--rightcomponent",level:3},{value:"<code>heading</code>",id:"heading",level:3},{value:"<code>headingTx</code>",id:"headingtx",level:3},{value:"<code>headingTxOptions</code>",id:"headingtxoptions",level:3},{value:"<code>headingStyle</code>",id:"headingstyle",level:3},{value:"<code>HeadingTextProps</code>",id:"headingtextprops",level:3},{value:"<code>HeadingComponent</code>",id:"headingcomponent",level:3},{value:"<code>content</code>",id:"content",level:3},{value:"<code>contentTx</code>",id:"contenttx",level:3},{value:"<code>contentTxOptions</code>",id:"contenttxoptions",level:3},{value:"<code>contentStyle</code>",id:"contentstyle",level:3},{value:"<code>ContentTextProps</code>",id:"contenttextprops",level:3},{value:"<code>ContentComponent</code>",id:"contentcomponent",level:3},{value:"<code>footer</code>",id:"footer",level:3},{value:"<code>footerTx</code>",id:"footertx",level:3},{value:"<code>footerTxOptions</code>",id:"footertxoptions",level:3},{value:"<code>footerStyle</code>",id:"footerstyle",level:3},{value:"<code>FooterTextProps</code>",id:"footertextprops",level:3},{value:"<code>FooterComponent</code>",id:"footercomponent",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"card",children:"Card"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"Card"})," component is intended to be used for vertically aligned related content. It is a container that can hold a heading, content, and footer. It can also hold a left and right component that will be aligned to the left and right of the card body."]}),"\n",(0,d.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  preset="reversed"\n  verticalAlignment="space-between"\n  LeftComponent={<Text>Left</Text>}\n  RightComponent={<Text>Right</Text>}\n  heading="Card Heading"\n  headingStyle={{ color: "#a511dc" }}\n  HeadingTextProps={{ weight: "bold" }}\n  content="Card Content"\n  contentStyle={{ color: "#a511dc" }}\n  ContentTextProps={{ weight: "light" }}\n  footer="Card Footer"\n  footerStyle={{ color: "#a511dc" }}\n  FooterTextProps={{ weight: "medium" }}\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"preset",children:(0,d.jsx)(n.code,{children:"preset"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"preset"})," prop is used to set the preset container style of the card. This affects the border and background color of the container. There are two preconfigured presets: ",(0,d.jsx)(n.code,{children:"default"})," and ",(0,d.jsx)(n.code,{children:"reversed"}),"."]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:"https://github.com/user-attachments/assets/e5a19ec9-b426-428e-ae19-a1086dc2e4bc",alt:"card-component-01"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card preset="reversed" heading="Card Heading" content="Card Content" footer="Card Footer" />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"verticalalignment",children:(0,d.jsx)(n.code,{children:"verticalAlignment"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"verticalAlignment"})," prop is used to set the vertical alignment of the card's content. This affects the alignment of the heading, content, and footer. There are four preconfigured alignments: ",(0,d.jsx)(n.code,{children:"top"}),", ",(0,d.jsx)(n.code,{children:"center"}),", ",(0,d.jsx)(n.code,{children:"space-between"}),", and ",(0,d.jsx)(n.code,{children:"force-footer-bottom"}),". ",(0,d.jsx)(n.code,{children:"force-footer-bottom"})," behaves like ",(0,d.jsx)(n.code,{children:"top"}),", but will force the footer to the bottom of the card."]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:"https://github.com/user-attachments/assets/e5e9f331-6c4d-4ce3-833d-a00fdf7244f1",alt:"card-component-02"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  verticalAlignment="space-between"\n  heading="Card Heading"\n  content="Card Content"\n  footer="Card Footer"\n/>\n'})}),"\n",(0,d.jsxs)(n.h3,{id:"leftcomponent--rightcomponent",children:[(0,d.jsx)(n.code,{children:"LeftComponent"})," & ",(0,d.jsx)(n.code,{children:"RightComponent"})]}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"LeftComponent"})," and ",(0,d.jsx)(n.code,{children:"RightComponent"})," props are used to set the component that will be aligned to the left or right of the card body, respectively."]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:"https://github.com/user-attachments/assets/68df8495-ee9b-452f-b86f-b39ee76a052c",alt:"card-component-03"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  LeftComponent={\n    <AutoImage\n      maxWidth={80}\n      maxHeight={60}\n      style={{ alignSelf: "center" }}\n      source={{\n        uri: "https://user-images.githubusercontent.com/1775841/184508739-f90d0ce5-7219-42fd-a91f-3382d016eae0.png",\n      }}\n    />\n  }\n  RightComponent={\n    <Button preset="default" text="Click It" onPress={() => Alert.alert("pressed")} />\n  }\n  heading="Card Heading"\n  content="Card Content"\n  footer="Card Footer"\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"heading",children:(0,d.jsx)(n.code,{children:"heading"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"heading"})," prop is used to set the heading text of the card."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card heading="Card Heading" content="Card Content" footer="Card Footer" />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"headingtx",children:(0,d.jsx)(n.code,{children:"headingTx"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"headingTx"})," prop is used to set the heading text of the card using a translation key."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card headingTx="card:heading" content="Card Content" footer="Card Footer" />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"headingtxoptions",children:(0,d.jsx)(n.code,{children:"headingTxOptions"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"headingTxOptions"})," prop is used to set the options for the translation key used by the ",(0,d.jsx)(n.code,{children:"headingTx"})," prop."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  headingTx="card:heading"\n  headingTxOptions={{ count: 2 }}\n  content="Card Content"\n  footer="Card Footer"\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"headingstyle",children:(0,d.jsx)(n.code,{children:"headingStyle"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"headingStyle"})," prop is used to set the style of the heading text."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  heading="Card Heading"\n  headingStyle={{ color: "red" }}\n  content="Card Content"\n  footer="Card Footer"\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"headingtextprops",children:(0,d.jsx)(n.code,{children:"HeadingTextProps"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"HeadingTextProps"})," prop is used to pass any additional props to the heading ",(0,d.jsx)(n.code,{children:"Text"})," component. It will accept any prop that the ",(0,d.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Text",children:(0,d.jsx)(n.code,{children:"Text"})})," component accepts."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  heading="Card Heading"\n  HeadingTextProps={{ size: "lg" }}\n  content="Card Content"\n  footer="Card Footer"\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"headingcomponent",children:(0,d.jsx)(n.code,{children:"HeadingComponent"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"HeadingComponent"})," prop is used to set the component that will be used for the heading. This can be used to set a custom heading component."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  HeadingComponent={<Button preset="reversed" text="HeadingComponent" icon="ladybug" />}\n  content="Card Content"\n  footer="Card Footer"\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"content",children:(0,d.jsx)(n.code,{children:"content"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"content"})," prop is used to set the content text of the card."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card heading="Card Heading" content="Card Content" footer="Card Footer" />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"contenttx",children:(0,d.jsx)(n.code,{children:"contentTx"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"contentTx"})," prop is used to set the content text of the card using a translation key."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card heading="Card Heading" contentTx="card:content" footer="Card Footer" />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"contenttxoptions",children:(0,d.jsx)(n.code,{children:"contentTxOptions"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"contentTxOptions"})," prop is used to set the options for the translation key used by the ",(0,d.jsx)(n.code,{children:"contentTx"})," prop."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  heading="Card Heading"\n  contentTx="card:content"\n  contentTxOptions={{ count: 2 }}\n  footer="Card Footer"\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"contentstyle",children:(0,d.jsx)(n.code,{children:"contentStyle"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"contentStyle"})," prop is used to set the style of the content text."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  heading="Card Heading"\n  content="Card Content"\n  contentStyle={{ backgroundColor: colors.error, color: colors.palette.neutral100 }}\n  footer="Card Footer"\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"contenttextprops",children:(0,d.jsx)(n.code,{children:"ContentTextProps"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"ContentTextProps"})," prop is used to pass any additional props to the content ",(0,d.jsx)(n.code,{children:"Text"})," component. It will accept any prop that the ",(0,d.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Text",children:(0,d.jsx)(n.code,{children:"Text"})})," component accepts."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  heading="Card Heading"\n  content="Card Content"\n  ContentTextProps={{ size: "lg" }}\n  footer="Card Footer"\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"contentcomponent",children:(0,d.jsx)(n.code,{children:"ContentComponent"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"ContentComponent"})," prop is used to set the component that will be used for the content. This can be used to set a custom content component."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  heading="Card Heading"\n  ContentComponent={<Button preset="reversed" text="ContentComponent" icon="ladybug" />}\n  footer="Card Footer"\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"footer",children:(0,d.jsx)(n.code,{children:"footer"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"footer"})," prop is used to set the footer text of the card."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card heading="Card Heading" content="Card Content" footer="Card Footer" />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"footertx",children:(0,d.jsx)(n.code,{children:"footerTx"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"footerTx"})," prop is used to set the footer text of the card using a translation key."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card heading="Card Heading" content="Card Content" footerTx="card:footer" />\n'})}),"\n",(0,d.jsx)(n.h3,{id:"footertxoptions",children:(0,d.jsx)(n.code,{children:"footerTxOptions"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"footerTxOptions"})," prop is used to set the options for the translation key used by the ",(0,d.jsx)(n.code,{children:"footerTx"})," prop."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  heading="Card Heading"\n  content="Card Content"\n  footerTx="card:footer"\n  footerTxOptions={{ count: 2 }}\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"footerstyle",children:(0,d.jsx)(n.code,{children:"footerStyle"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"footerStyle"})," prop is used to set the style of the footer text."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  heading="Card Heading"\n  content="Card Content"\n  footer="Card Footer"\n  footerStyle={{ color: "red" }}\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"footertextprops",children:(0,d.jsx)(n.code,{children:"FooterTextProps"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"FooterTextProps"})," prop is used to pass any additional props to the footer ",(0,d.jsx)(n.code,{children:"Text"})," component. It will accept any prop that the ",(0,d.jsx)(n.a,{href:"/ignite-cli/boilerplate/app/components/Text",children:(0,d.jsx)(n.code,{children:"Text"})})," component accepts."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  heading="Card Heading"\n  content="Card Content"\n  footer="Card Footer"\n  FooterTextProps={{ size: "lg" }}\n/>\n'})}),"\n",(0,d.jsx)(n.h3,{id:"footercomponent",children:(0,d.jsx)(n.code,{children:"FooterComponent"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"FooterComponent"})," prop is used to set the component that will be used for the footer. This can be used to set a custom footer component."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-tsx",children:'<Card\n  heading="Card Heading"\n  content="Card Content"\n  FooterComponent={<Button preset="reversed" text="FooterComponent" icon="ladybug" />}\n/>\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var o=t(6540);const d={},r=o.createContext(d);function c(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);