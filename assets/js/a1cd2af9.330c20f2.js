"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[8952],{2305:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"reactotron/plugins/index","title":"Reactotron Plugins","description":"Reactotron has a powerful plugin system with ready-made plugins for you to use in your app. You can also create your own plugins to extend Reactotron\'s functionality.","source":"@site/docs/reactotron/plugins/index.md","sourceDirName":"reactotron/plugins","slug":"/reactotron/plugins/","permalink":"/reactotron/plugins/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"Reactotron","previous":{"title":"Custom Commands","permalink":"/reactotron/custom-commands"},"next":{"title":"Apisauce","permalink":"/reactotron/plugins/apisauce"}}');var a=t(4848),i=t(8453);const r={},s="Reactotron Plugins",c={},l=[{value:"What is a plugin?",id:"what-is-a-plugin",level:2},{value:"Installing a plugin",id:"installing-a-plugin",level:2}];function u(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"reactotron-plugins",children:"Reactotron Plugins"})}),"\n",(0,a.jsx)(e.p,{children:"Reactotron has a powerful plugin system with ready-made plugins for you to use in your app. You can also create your own plugins to extend Reactotron's functionality."}),"\n",(0,a.jsx)(e.h2,{id:"what-is-a-plugin",children:"What is a plugin?"}),"\n",(0,a.jsx)(e.p,{children:"A plugin is a way to extend Reactotron's functionality. Plugins can be used to add new features to Reactotron or to add support for new libraries."}),"\n",(0,a.jsx)(e.h2,{id:"installing-a-plugin",children:"Installing a plugin"}),"\n",(0,a.jsxs)(e.p,{children:["To install a plugin, you need to add it to your Reactotron client. You can do this by importing the plugin and passing it to the ",(0,a.jsx)(e.code,{children:"use"})," method when you configure Reactotron."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",children:'import Reactotron from "reactotron-react-native"\n\nReactotron.configure()\n  .use(somePlugin())\n  .connect()\n'})}),"\n",(0,a.jsx)(e.h1,{id:"community-made-plugins",children:"Community-made plugins"}),"\n",(0,a.jsx)(e.p,{children:"Anyone can make a Reactotron plugin! If you've made a plugin, please open a PR to add it to this list."}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Note that Infinite Red does not maintain these plugins and can not guarantee compatibility or effectiveness. If you have questions about a plugin, please contact the plugin author."}),"\n"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://github.com/hsndmr/reactotron-react-query",children:"reactotron-react-query"})}),"\n"]})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>s});var o=t(6540);const a={},i=o.createContext(a);function r(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);