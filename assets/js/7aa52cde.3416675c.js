"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[7769],{356:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/ci-tests-running-0c7a4ca3d93b52f100e2e195a07bfe2d.png"},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(6540);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}},8600:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/ci-copy-fork-branch-1e55c10b89deba00f67c13bba4146381.png"},8937:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"reactotron/contributing/ci","title":"Running CI Scripts on Untrusted Forks","description":"Untrusted forks could contain malicious code to mine cryptocurrency, steal secrets, or otherwise harm the CI server.","source":"@site/docs/reactotron/contributing/ci.md","sourceDirName":"reactotron/contributing","slug":"/reactotron/contributing/ci","permalink":"/reactotron/contributing/ci","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":99,"frontMatter":{"name":"Running Tests on Untrusted Forks","sidebar_position":99},"sidebar":"Reactotron","previous":{"title":"Welcome to the Reactotron Contributing Guide","permalink":"/reactotron/contributing/"},"next":{"title":"Architecture","permalink":"/reactotron/contributing/architecture"}}');var s=n(4848),o=n(8453);const i={name:"Running Tests on Untrusted Forks",sidebar_position:99},c="Running CI Scripts on Untrusted Forks",a={},h=[{value:"How to run the CI scripts on untrusted forks:",id:"how-to-run-the-ci-scripts-on-untrusted-forks",level:2},{value:"What does ci do?",id:"what-does-ci-do",level:2},{value:"Notes",id:"notes",level:3}];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"running-ci-scripts-on-untrusted-forks",children:"Running CI Scripts on Untrusted Forks"})}),"\n",(0,s.jsx)(t.p,{children:"Untrusted forks could contain malicious code to mine cryptocurrency, steal secrets, or otherwise harm the CI server."}),"\n",(0,s.jsx)(t.p,{children:"For PRs from untrusted forks, to run the CI scripts, we need to:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Review the code to ensure that it is safe to run on the CI server."}),"\n",(0,s.jsxs)(t.li,{children:["If the code is safe, run the ",(0,s.jsx)(t.code,{children:"ci:trust"})," script to push the commits to a branch on the main repository, where the CI scripts can be run."]}),"\n",(0,s.jsx)(t.li,{children:"Once the tests have run, the status of the PR will be updated automatically (because the commits are the same)."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"how-to-run-the-ci-scripts-on-untrusted-forks",children:"How to run the CI scripts on untrusted forks:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Copy the name of the branch from the PR.\n",(0,s.jsx)(t.img,{alt:"Copy Fork Branch",src:n(8600).A+"",width:"2254",height:"404"})]}),"\n",(0,s.jsxs)(t.li,{children:["From your local clone of the main repository, run the ",(0,s.jsx)(t.code,{children:"ci:trust"})," script.","\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"yarn ci:trust <branch-name>\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["The branch will be pushed and the tests will run\n",(0,s.jsx)(t.img,{alt:"CI Tests Running",src:n(356).A+"",width:"1218",height:"230"})]}),"\n"]}),"\n",(0,s.jsxs)(t.h2,{id:"what-does-ci-do",children:["What does ci",":trust"," do?"]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"ci:trust"})," script does the following:"]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Adds and fetches the untrusted fork as a temporary remote in your local repository."}),"\n",(0,s.jsx)(t.li,{children:"Pushes the specific branch from the untrusted fork to a designated temporary branch in your original repository."}),"\n",(0,s.jsx)(t.li,{children:"Pushing to a local branch triggers the continuous integration (CI) tests on the commits of the branch."}),"\n",(0,s.jsx)(t.li,{children:"Because the commits are the same, the status of the PR will be updated automatically."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["The ci",":trust"," script will only work if you have write access to the main repository. This prevents malicious users from running the script on the main repository."]}),"\n",(0,s.jsxs)(t.li,{children:["The ci",":trust"," script pushes the commits to a branch called ",(0,s.jsx)(t.code,{children:"temp-ci-trusted-fork"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"temp-ci-trusted-fork"})," branch will be deleted and recreated if it already exists. This allows the script to\nclean up its own temporary branches."]})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);