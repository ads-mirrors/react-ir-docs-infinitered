"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[4008],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1663:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={id:"react-native",title:"react-native"},i="Quick Start for React Native",c={unversionedId:"reactotron/quick-start/react-native",id:"reactotron/quick-start/react-native",title:"react-native",description:"Installing Reactotron.app",source:"@site/docs/reactotron/quick-start/react-native.md",sourceDirName:"reactotron/quick-start",slug:"/reactotron/quick-start/react-native",permalink:"/reactotron/quick-start/react-native",draft:!1,tags:[],version:"current",frontMatter:{id:"react-native",title:"react-native"},sidebar:"Reactotron",previous:{title:"react",permalink:"/reactotron/quick-start/react-js"},next:{title:"Custom Commands",permalink:"/reactotron/custom-commands"}},l={},s=[{value:"Installing Reactotron.app",id:"installing-reactotronapp",level:2},{value:"Configure Reactotron with your project",id:"configure-reactotron-with-your-project",level:2},{value:"<strong>Step 1 - Add Reactotron as DEV dependency</strong>",id:"step-1---add-reactotron-as-dev-dependency",level:4},{value:"<strong>Step 2 - Initialization</strong>",id:"step-2---initialization",level:4},{value:"<strong>Step 3 - Add Reactotron to your app</strong>",id:"step-3---add-reactotron-to-your-app",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...o}=e;return(0,a.kt)(u,(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start-for-react-native"},"Quick Start for React Native"),(0,a.kt)("h2",{id:"installing-reactotronapp"},"Installing Reactotron.app"),(0,a.kt)("p",null,"Let\u2019s ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/infinitered/reactotron/releases?q=reactotron-app&expanded=true"},"download the desktop app")," to start. You can download for Linux, Windows, and Mac."),(0,a.kt)("p",null,"Unzip & run."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Installing The App",src:n(9177).Z,width:"690",height:"348"})),(0,a.kt)("h2",{id:"configure-reactotron-with-your-project"},"Configure Reactotron with your project"),(0,a.kt)("h4",{id:"step-1---add-reactotron-as-dev-dependency"},(0,a.kt)("strong",{parentName:"h4"},"Step 1 - Add Reactotron as DEV dependency")),(0,a.kt)("p",null,"Add Reactotron on your React Native project as a dev dependency."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm i --save-dev reactotron-react-native\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn add reactotron-react-native -D\n")),(0,a.kt)("h4",{id:"step-2---initialization"},(0,a.kt)("strong",{parentName:"h4"},"Step 2 - Initialization")),(0,a.kt)("p",null,"Create a file in your root folder ",(0,a.kt)("inlineCode",{parentName:"p"},"ReactotronConfig.js")," and paste this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import Reactotron from "reactotron-react-native";\nimport { AsyncStorage } from "@react-native-async-storage/async-storage";\n\nReactotron.setAsyncStorageHandler(AsyncStorage)\n  .configure() // controls connection & communication settings\n  .useReactNative() // add all built-in react native plugins\n  .connect(); // let\'s connect!\n')),(0,a.kt)("p",null,"Or using a more advanced way to customize which plugins to include:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import Reactotron from "reactotron-react-native";\nimport { AsyncStorage } from "@react-native-async-storage/async-storage";\n\nReactotron.setAsyncStorageHandler(AsyncStorage)\n  .configure({\n    name: "React Native Demo",\n  })\n  .useReactNative({\n    asyncStorage: false, // there are more options to the async storage.\n    networking: {\n      // optionally, you can turn it off with false.\n      ignoreUrls: /symbolicate/,\n    },\n    editor: false, // there are more options to editor\n    errors: { veto: (stackFrame) => false }, // or turn it off with false\n    overlay: false, // just turning off overlay\n  })\n  .connect();\n')),(0,a.kt)("p",null,"Alternatively, you can create your own plugin and provide it via:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import Reactotron from "reactotron-react-native";\n\nconst middleware = (tron) => {\n  /* plugin definition */\n};\n\nReactotron.setAsyncStorageHandler(AsyncStorage)\n  .configure({\n    name: "React Native Demo",\n  })\n  .useReactNative() // add all built-in react native plugins\n  .use(middleware) // plus some custom made plugin.\n  .connect();\n')),(0,a.kt)("p",null,"If you're using Expo, you will also need to configure the host:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import Reactotron from "reactotron-react-native";\nimport { NativeModules } from "react-native";\nimport { AsyncStorage } from "@react-native-async-storage/async-storage";\n\nconst hostname = NativeModules.SourceCode.scriptURL\n  .split("://")[1] // Remove the scheme\n  .split("/")[0] // Remove the path\n  .split(":")[0]; // Remove the port\n\nReactotron.setAsyncStorageHandler(AsyncStorage)\n  .configure({ host: hostname }) // configure the hostname for Expo\n  .useReactNative() // add all built-in react native plugins\n  .connect(); // let\'s connect!\n')),(0,a.kt)("h4",{id:"step-3---add-reactotron-to-your-app"},(0,a.kt)("strong",{parentName:"h4"},"Step 3 - Add Reactotron to your app")),(0,a.kt)("p",null,"Finally, we import this on in one of:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"App.js")," (Create React Native App / Expo) or"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"index.js"))),(0,a.kt)("p",null,"on line 1:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'if (__DEV__) {\n  import("./ReactotronConfig").then(() => console.log("Reactotron Configured"));\n}\n')),(0,a.kt)("p",null,"At this point, Reactotron is hooked up. ",(0,a.kt)("strong",{parentName:"p"},"HOUSTON, WE HAVE A CONNECTION!")),(0,a.kt)("p",null,"Refresh your app (or start it up ",(0,a.kt)("inlineCode",{parentName:"p"},"react-native start"),") and have a look at Reactotron now. Do you see the ",(0,a.kt)("inlineCode",{parentName:"p"},"CONNECTION")," line? Click that to expand."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"We Have Contact",src:n(3793).Z,width:"722",height:"338"})),(0,a.kt)("p",null,"Go back to your app and refresh it 5 or 6 times. Now look."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Chatty",src:n(7347).Z,width:"694",height:"538"})),(0,a.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Android"),": If you are using an Android device or an emulator run the following command to make sure it can connect to Reactotron:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"adb reverse tcp:9090 tcp:9090\n")))}d.isMDXComponent=!0},9177:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/installing-7904d3888f8c50ebc200ed81fdca9fe5.jpg"},3793:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/first-connect-c86e23bb3d3d3b283b0d4703b48e0fa9.jpg"},7347:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/spammy-a68353570e402277b8067e42e844c647.jpg"}}]);