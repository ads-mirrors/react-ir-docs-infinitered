"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[491],{8035:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"reactotron/custom-commands","title":"Custom Commands","description":"With Reactotron you can register custom commands that can do anything you want when they are executed. You can see all your registered commands in the \\"Custom Commands\\" tab in reactotron.","source":"@site/docs/reactotron/custom-commands.md","sourceDirName":"reactotron","slug":"/reactotron/custom-commands","permalink":"/reactotron/custom-commands","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Custom Commands"},"sidebar":"Reactotron","previous":{"title":"react-native","permalink":"/reactotron/quick-start/react-native"},"next":{"title":"Reactotron Plugins","permalink":"/reactotron/plugins/"}}');var a=t(4848),s=t(8453);const r={sidebar_position:5,title:"Custom Commands"},i="Setting up custom commands",c={},m=[{value:"Registering a command",id:"registering-a-command",level:2},{value:"Unregistering a command",id:"unregistering-a-command",level:2},{value:"Some real-world examples:",id:"some-real-world-examples",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"setting-up-custom-commands",children:"Setting up custom commands"})}),"\n",(0,a.jsx)(n.p,{children:'With Reactotron you can register custom commands that can do anything you want when they are executed. You can see all your registered commands in the "Custom Commands" tab in reactotron.'}),"\n",(0,a.jsx)(n.h2,{id:"registering-a-command",children:"Registering a command"}),"\n",(0,a.jsx)(n.p,{children:"There are two ways you can write your custom commands."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'Reactotron.onCustomCommand({\n  command: "test2",\n  handler: () => console.log("This is an example 2"),  // Optional settings\n  title: "A thing", // This shows on the button\n  description: "The desc", // This shows below the button\n})\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'Reactotron.onCustomCommand("test", () => console.log("This is an example"))\n'})}),"\n",(0,a.jsx)(n.h2,{id:"unregistering-a-command",children:"Unregistering a command"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'const selfRemoving = Reactotron.onCustomCommand({\n  // Save the result\n  command: "remove",\n  handler: () => {\n    selfRemoving() // Calling it unregisters the command\n  },\n})\n'})}),"\n",(0,a.jsx)(n.h2,{id:"some-real-world-examples",children:"Some real-world examples:"}),"\n",(0,a.jsxs)(n.p,{children:["You can find ",(0,a.jsx)(n.a,{href:"https://github.com/infinitered/ignite/blob/master/boilerplate/app/devtools/ReactotronConfig.ts",children:"many real-world examples in Ignite"}),", InfiniteRed's boilerplate react native solution."]}),"\n",(0,a.jsx)(n.p,{children:"Here are some examples:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'// Utilize react-navigation to put a button in Reactotron to go back to the previous screen:\nReactotron.onCustomCommand({\n  title: "Go Back",\n  description: "Goes back",\n  command: "goBack",\n  handler: () => {\n    Reactotron.log("Going back")\n    goBack()\n  },\n})\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'// Accept user input from Reactotron and navigate to that route:\nReactotron.onCustomCommand({\n  command: "navigateTo",\n  handler: (args) => {\n    const { route } = args\n    if (route) {\n      Reactotron.log(`Navigating to: ${route}`)\n      navigate(route)\n    } else {\n      Reactotron.log("Could not navigate. No route provided.")\n    }\n  },\n  title: "Navigate To Screen",\n  description: "Navigates to a screen by name.",\n  args: [\n    {\n      name: "route",\n      type: ArgType.String,\n    },\n  ],\n})\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:'// Completely reset the app\'s react-navigation state:\nReactotron.onCustomCommand({\n  title: "Reset Navigation State",\n  description: "Resets the navigation state",\n  command: "resetNavigation",\n  handler: () => {\n    Reactotron.log("resetting navigation state")\n    resetRoot({ index: 0, routes: [] })\n  },\n})\n'})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(6540);const a={},s=o.createContext(a);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);