"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[6178],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,m=c["".concat(u,".").concat(d)]||c[d]||g[d]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5909:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={},o="Contributing",l={unversionedId:"gluegun/contributing",id:"gluegun/contributing",title:"Contributing",description:"Welcome!",source:"@site/docs/gluegun/contributing.md",sourceDirName:"gluegun",slug:"/gluegun/contributing",permalink:"/ir-docs/docs/gluegun/contributing",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"gluegun",previous:{title:"Template",permalink:"/ir-docs/docs/gluegun/Toolbox/toolbox-template"},next:{title:"Getting Started",permalink:"/ir-docs/docs/gluegun/getting-started"}},u={},s=[{value:"Global Dependencies",id:"global-dependencies",level:2},{value:"Installing <code>gluegun</code>",id:"installing-gluegun",level:2},{value:"Running Tests And Linting",id:"running-tests-and-linting",level:2},{value:"Features &amp; Fixes",id:"features--fixes",level:2},{value:"Submitting a Pull Request",id:"submitting-a-pull-request",level:2},{value:"Keeping up to date",id:"keeping-up-to-date",level:2}],p={toc:s},c="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"contributing"},"Contributing"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Welcome!")),(0,a.kt)("p",null,"Bug fixes, features, docs, marketing, and issue support are all contributions. We love it when people help out and are more than willing to give you advice, guidance, or just be a \ud83d\udc25 debugger for you."),(0,a.kt)("h2",{id:"global-dependencies"},"Global Dependencies"),(0,a.kt)("p",null,"If you're reading this, you might be interested in pitching in from a code point of view."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"gluegun")," is powered by Node (7.6 or above). Install Node using ",(0,a.kt)("inlineCode",{parentName:"p"},"brew")," (if on macOS) or by following the instructions here: ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/current/"},"https://nodejs.org/en/download/current/")),(0,a.kt)("p",null,"Also install yarn: ",(0,a.kt)("inlineCode",{parentName:"p"},"brew install yarn")," or ",(0,a.kt)("a",{parentName:"p",href:"https://yarnpkg.com"},"https://yarnpkg.com"),"."),(0,a.kt)("h2",{id:"installing-gluegun"},"Installing ",(0,a.kt)("inlineCode",{parentName:"h2"},"gluegun")),(0,a.kt)("p",null,"Next, fork the repo ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/infinitered/gluegun"},"on Github")," and clone down your repo."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"git clone git@github.com/<yourusername>/gluegun\n")),(0,a.kt)("p",null,"Install all the dependencies."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd gluegun\nyarn\n")),(0,a.kt)("p",null,"Gluegun's source files are mostly in ",(0,a.kt)("inlineCode",{parentName:"p"},"./src")," and are written in ",(0,a.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org"},"TypeScript"),". Documentation lives in ",(0,a.kt)("inlineCode",{parentName:"p"},"/docs"),"."),(0,a.kt)("h2",{id:"running-tests-and-linting"},"Running Tests And Linting"),(0,a.kt)("p",null,"On macOS or Linux:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"yarn test\nyarn lint\nyarn watch\nyarn integration\n")),(0,a.kt)("p",null,"On windows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"yarn lint\nyarn windows:test\n")),(0,a.kt)("h2",{id:"features--fixes"},"Features & Fixes"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'git branch feature/fun\n# furious typing\nyarn test\nyarn lint\ngit commit -m "Adds fun"\ngit push -u origin --HEAD\n')),(0,a.kt)("p",null,"Passing tests and linting is required before we'll merge a pull request. If you need help with this, feel free to file an issue or chat with us on the ",(0,a.kt)("a",{parentName:"p",href:"http://community.infinite.red"},"Infinite Red Community Slack"),"."),(0,a.kt)("h2",{id:"submitting-a-pull-request"},"Submitting a Pull Request"),(0,a.kt)("p",null,"Jump on Github on your fork. Switch to the branch with your new changes, and\nopen a PR against ",(0,a.kt)("inlineCode",{parentName:"p"},"master")," of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/infinitered/gluegun"},"infinitered/gluegun"),"."),(0,a.kt)("p",null,"Screenshots of what the feature is \ud83d\udcaf. Animated gifs (suggested apps: licecap, Gif Brewery, or Kap) are \ud83d\udcaf + \ud83e\udd84."),(0,a.kt)("p",null,"Then submit the pull request."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"It's okay to submit an issue before breaking changes or shenanigans to get a sense if it's cool"),(0,a.kt)("li",{parentName:"ul"},"It's okay to submit PRs to start a discussion - just mark it \ud83d\udea8\ud83d\udea8\ud83d\udea8 (or whatever) to let us know it's a conversation"),(0,a.kt)("li",{parentName:"ul"},"It's okay to submit changes to PRs not yet merged, just make sure it's related to the PR"),(0,a.kt)("li",{parentName:"ul"},"If Github is complaining about conflicts, rebase downstream, merge upstream")),(0,a.kt)("h2",{id:"keeping-up-to-date"},"Keeping up to date"),(0,a.kt)("p",null,"You want your fork's ",(0,a.kt)("inlineCode",{parentName:"p"},"master")," to be the same as ",(0,a.kt)("inlineCode",{parentName:"p"},"gluegun/master"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# just once, run this to track our repo as `upstream`\ngit remote add upstream https://github.com/infinitered/gluegun.git\n\n# then when you need to update\ngit checkout master\ngit pull upstream\n# if on your own branch\ngit checkout <your branch>\ngit merge master\n\n# and here's where you'd create your branch\ngit checkout -b feature/mybranch\n")))}g.isMDXComponent=!0}}]);