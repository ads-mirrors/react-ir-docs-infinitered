"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[6905],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),d=o,g=c["".concat(i,".").concat(d)]||c[d]||m[d]||a;return n?r.createElement(g,l(l({ref:t},u),{},{components:n})):r.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:o,l[1]=s;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},720:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},l=void 0,s={unversionedId:"gluegun/toolbox-system",id:"gluegun/toolbox-system",title:"toolbox-system",description:"Provides access to shell and OS processes.",source:"@site/docs/gluegun/toolbox-system.md",sourceDirName:"gluegun",slug:"/gluegun/toolbox-system",permalink:"/ir-docs/docs/gluegun/toolbox-system",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"gluegun",previous:{title:"toolbox-strings",permalink:"/ir-docs/docs/gluegun/toolbox-strings"},next:{title:"toolbox-template",permalink:"/ir-docs/docs/gluegun/toolbox-template"}},i={},p=[{value:"run",id:"run",level:2},{value:"toolbox.system.which",id:"toolboxsystemwhich",level:3},{value:"toolbox.system.open",id:"toolboxsystemopen",level:3},{value:"toolbox.system.startTimer",id:"toolboxsystemstarttimer",level:3}],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides access to shell and OS processes."),(0,o.kt)("p",null,"You can access these tools on the Gluegun toolbox, via ",(0,o.kt)("inlineCode",{parentName:"p"},"const { system } = require('gluegun')"),", or directly via ",(0,o.kt)("inlineCode",{parentName:"p"},"const { system } = require('gluegun/system')"),"."),(0,o.kt)("h2",{id:"run"},"run"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This is an ",(0,o.kt)("strong",{parentName:"p"},"async")," function.")),(0,o.kt)("p",null,"Runs a shell command and returns the output as a string."),(0,o.kt)("p",null,"The first parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"commandLine")," is the shell command to run. It can have pipes! The\nsecond parameter is ",(0,o.kt)("inlineCode",{parentName:"p"},"options"),", object. This is a promise wrapped around node.js ",(0,o.kt)("inlineCode",{parentName:"p"},"child-process.exec"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback"},"api call"),"."),(0,o.kt)("p",null,"You can also pass ",(0,o.kt)("inlineCode",{parentName:"p"},"trim: true")," inside the options parameter to have the output automatically trim all\nstarting and trailing spaces."),(0,o.kt)("p",null,"Should the process fail, an ",(0,o.kt)("inlineCode",{parentName:"p"},"error")," will be thrown with properties such as:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"property"),(0,o.kt)("th",{parentName:"tr",align:null},"type"),(0,o.kt)("th",{parentName:"tr",align:null},"purpose"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"code"),(0,o.kt)("td",{parentName:"tr",align:null},"number"),(0,o.kt)("td",{parentName:"tr",align:null},"the exit code")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"cmd"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"the command we asked to run")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"stdout"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"any information the process wrote to ",(0,o.kt)("inlineCode",{parentName:"td"},"stdout"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"stderr"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"any information the process wrote to ",(0,o.kt)("inlineCode",{parentName:"td"},"stderr"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"killed"),(0,o.kt)("td",{parentName:"tr",align:null},"bool"),(0,o.kt)("td",{parentName:"tr",align:null},"if the process was killed or not")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"signal"),(0,o.kt)("td",{parentName:"tr",align:null},"number"),(0,o.kt)("td",{parentName:"tr",align:null},"the signal number used to off the process (if killed)")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const nodeVersion = toolbox.system.run('node -v', { trim: true })\n")),(0,o.kt)("h3",{id:"toolboxsystemwhich"},"toolbox.system.which"),(0,o.kt)("p",null,"Returns the full path to a command on your system if located on your path."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const whereIsIt = toolbox.system.which('npm')\n")),(0,o.kt)("h3",{id:"toolboxsystemopen"},"toolbox.system.open"),(0,o.kt)("p",null,":("),(0,o.kt)("h3",{id:"toolboxsystemstarttimer"},"toolbox.system.startTimer"),(0,o.kt)("p",null,"Starts a timer for... well... timing stuff. ",(0,o.kt)("inlineCode",{parentName:"p"},"startTimer()")," returns a function. When this is called, the number of milliseconds will be returned."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const timer = toolbox.system.startTimer()\n\n// time passes...\nconsole.log(`that just took ${timer()} ms.`)\n")),(0,o.kt)("p",null,"Caveat: Due to the event loop scheduler in Node.JS, they don't guarantee millisecond accuracy when invoking async functions. For that reason, expect a up to a 4ms overage."),(0,o.kt)("p",null,"Note that this lag doesn't apply to synchronous code."))}m.isMDXComponent=!0}}]);