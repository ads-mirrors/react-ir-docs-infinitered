"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[5516],{2357:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var o=t(4848),r=t(8453);const i={},a="Welcome to the Reactotron Contributing Guide",c={id:"reactotron/contributing/index",title:"Welcome to the Reactotron Contributing Guide",description:"Thank you for investing your time in contributing to our project!",source:"@site/docs/reactotron/contributing/index.md",sourceDirName:"reactotron/contributing",slug:"/reactotron/contributing/",permalink:"/reactotron/contributing/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"Reactotron",previous:{title:"Troubleshooting",permalink:"/reactotron/troubleshooting"},next:{title:"Running CI Scripts on Untrusted Forks",permalink:"/reactotron/contributing/ci"}},l={},s=[{value:"Making changes to the Reactotron App",id:"making-changes-to-the-reactotron-app",level:2},{value:"Step 1: Get the development version of reactotron running",id:"step-1-get-the-development-version-of-reactotron-running",level:3},{value:"Step 2: Use the example react-native app to test your changes",id:"step-2-use-the-example-react-native-app-to-test-your-changes",level:3},{value:"Step 3: Making changes",id:"step-3-making-changes",level:3},{value:"Bring Your Own Application",id:"bring-your-own-application",level:2},{value:"Adding a new Reactotron plugin to <code>./lib</code>",id:"adding-a-new-reactotron-plugin-to-lib",level:2},{value:"Prepare for a pull request",id:"prepare-for-a-pull-request",level:3}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"welcome-to-the-reactotron-contributing-guide",children:"Welcome to the Reactotron Contributing Guide"}),"\n",(0,o.jsx)(n.p,{children:"Thank you for investing your time in contributing to our project!"}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"Please start by reading the other docs in this folder to understand how the monorepo folder structure and plugin architecture work."})}),"\n",(0,o.jsx)(n.h2,{id:"making-changes-to-the-reactotron-app",children:"Making changes to the Reactotron App"}),"\n",(0,o.jsx)(n.h3,{id:"step-1-get-the-development-version-of-reactotron-running",children:"Step 1: Get the development version of reactotron running"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Fork the repo and then clone it to your local machine: ",(0,o.jsx)(n.code,{children:"git clone git@github.com:YOUR_USER_NAME/reactotron.git"})]}),"\n",(0,o.jsxs)(n.li,{children:["Install dependencies: ",(0,o.jsx)(n.code,{children:"yarn"})]}),"\n",(0,o.jsxs)(n.li,{children:["Start the ",(0,o.jsx)(n.code,{children:"reactotron-app"})," in development mode: ",(0,o.jsx)(n.code,{children:"yarn start"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"You should see the reactotron electron app open on your machine with the development menu open."}),"\n",(0,o.jsx)(n.h3,{id:"step-2-use-the-example-react-native-app-to-test-your-changes",children:"Step 2: Use the example react-native app to test your changes"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Start the example app with ",(0,o.jsx)(n.code,{children:"yarn start:example"})]}),"\n",(0,o.jsx)(n.li,{children:"Launch the app in the simulator of your choice."}),"\n",(0,o.jsx)(n.li,{children:"You should see output in the reactotron app."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"step-3-making-changes",children:"Step 3: Making changes"}),"\n",(0,o.jsxs)(n.p,{children:["Changes made to the main reactotron electron app in ",(0,o.jsx)(n.code,{children:"./apps/reactotron-app"})," will be reflected in the reactotron app that you started in step 1. You may need to kill the app and restart it to see your changes."]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"Remember to reload the example app from step 2 or other connected application(s) to reconnect the app to reactotron."})}),"\n",(0,o.jsx)(n.p,{children:"Changes made to the client packages will be reflected in the example application immediately."}),"\n",(0,o.jsx)(n.h2,{id:"bring-your-own-application",children:"Bring Your Own Application"}),"\n",(0,o.jsxs)(n.p,{children:["Let's say that you want to develop features using your own application instead of the example app. If you make changes to the non-electron app packages in this monorepo like ",(0,o.jsx)(n.code,{children:"reactotron-react-native"})," or ",(0,o.jsx)(n.code,{children:"reactotron-core-client"}),", you will need to build the packages and then link them to your react-native app. Luckily, we have a script that will do this for you."]}),"\n",(0,o.jsxs)(n.p,{children:["You can run ",(0,o.jsx)(n.code,{children:"yarn build"})," to build all reactotron packages, or ",(0,o.jsx)(n.code,{children:"yarn build:watch"})," to watch and rebuild changes automatically."]}),"\n",(0,o.jsxs)(n.p,{children:["If your app was located in the ",(0,o.jsx)(n.code,{children:"~/Code/PizzaApp"})," folder, to link the packages to your react-native app run:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"npx zx scripts/install-workspace-packages-in-target.mjs ~/Code/PizzaApp\n"})}),"\n",(0,o.jsx)(n.p,{children:"or if you want to watch for rebuilds and automatically link them:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'npx nx watch --all -- "npx zx scripts/install-workspace-packages-in-target.mjs ~/Code/PizzaApp\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["Make sure that the path to your app is an absolute path and not a relative one (i.e. ",(0,o.jsx)(n.code,{children:"~/Code/PizzaApp"})," instead of ",(0,o.jsx)(n.code,{children:"../PizzaApp"}),")"]})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["You must have already run ",(0,o.jsx)(n.code,{children:"yarn"})," in your app folder (e.g. ",(0,o.jsx)(n.code,{children:"~/Code/PizzaApp"}),") before running this script because is copies over the built js files from each reactotron library into the app's ",(0,o.jsx)(n.code,{children:"node_modules"})," folder."]})}),"\n",(0,o.jsxs)(n.h2,{id:"adding-a-new-reactotron-plugin-to-lib",children:["Adding a new Reactotron plugin to ",(0,o.jsx)(n.code,{children:"./lib"})]}),"\n",(0,o.jsx)(n.p,{children:"If you have a new plugin to contribute to the Reactotron ecosystem, you can start a new workspace by running the generate plugin script:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"yarn generate:plugin my-plugin\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This will create the necessary directory in ",(0,o.jsx)(n.code,{children:"./lib"})," and get you started with a template. You'll want to implement your configuration and plugin in ",(0,o.jsx)(n.code,{children:"./lib/reactotron-my-plugin/reactotron-my-plugin.ts"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Keep in mind this won't add the workspace to ",(0,o.jsx)(n.code,{children:".circleci/config.yml"}),", that must still be done manually when ready."]}),"\n",(0,o.jsx)(n.h3,{id:"prepare-for-a-pull-request",children:"Prepare for a pull request"}),"\n",(0,o.jsx)(n.p,{children:"Before you open a pull request, please ensure that the following command runs without errors:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"yarn build-and-test:local\n"})}),"\n",(0,o.jsx)(n.p,{children:"Once you've made your changes and verified your local codebase passes all tests and linters, you'll need to commit them and push them to your fork. Then, you can open a pull request to the main repo."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var o=t(6540);const r={},i=o.createContext(r);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);