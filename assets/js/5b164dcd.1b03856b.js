"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[7194],{8219:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var t=i(4848),s=i(8453);const l={sidebar_position:1,title:"Getting Started"},a="react-native-mlkit-image-labeling",r={id:"react-native-mlkit/image-labeling/index",title:"Getting Started",description:"This is the introduction to the documentation.",source:"@site/docs/react-native-mlkit/image-labeling/index.md",sourceDirName:"react-native-mlkit/image-labeling",slug:"/react-native-mlkit/image-labeling/",permalink:"/react-native-mlkit/image-labeling/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Getting Started"},sidebar:"React Native MLKit",previous:{title:"Image Labeling",permalink:"/category/image-labeling"},next:{title:"Image Labeler Options",permalink:"/react-native-mlkit/image-labeling/image-labeler-options"}},o={},c=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Components &amp; Hooks",id:"components--hooks",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"react-native-mlkit-image-labeling",children:"react-native-mlkit-image-labeling"}),"\n",(0,t.jsx)(n.p,{children:"This is the introduction to the documentation."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"react-native-mlkit-image-labeling"})," provides utilities for image classification using ML Kit in React Native\napps. It allows for the classification of images to determine their content, such as identifying if an image is NSFW.\n\u2022"]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"npm install @infinitered/react-native-mlkit-image-labeling\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"1. Import necessary hooks and types:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import {\n  useImageLabeler,\n  ClassificationResult,\n  AssetRecord,\n} from "@infinitered/react-native-mlkit-image-labeling";\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"2. Define your model and options:"})}),"\n",(0,t.jsxs)(n.p,{children:["Create an ",(0,t.jsx)(n.code,{children:"AssetRecord"})," which identifies the model file and set the options."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const MODELS: AssetRecord = {\n  nsfw: {\n    model: require("./path/to/model.tflite"),\n    options: {\n      maxResultCount: 5,\n      confidenceThreshold: 0,\n    },\n  },\n};\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"3. Using the image labeler in your component:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Initialize the image labeler for a specific model."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const model = useImageLabeler("nsfw");\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Classify an image by passing its URI."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const classificationResult = await model.classifyImage(image.uri);\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"components--hooks",children:"Components & Hooks"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"useImageLabeler(modelName: string)"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Returns an instance of the image labeler for the specified model."}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"modelName"}),": The name of the model as defined in your ",(0,t.jsx)(n.code,{children:"MODELS"})," object."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"ClassificationResult"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type definition for the result of the image classification. It includes:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"text"}),": Label of the classification."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"confidence"}),": A decimal value between 0 and 1 indicating the confidence level of the classification."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const s={},l=t.createContext(s);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);