"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[8143],{3844:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var o=n(4848),r=n(8453);const i={},s="Devtools Folder",a={id:"ignite-cli/boilerplate/app/devtools/Devtools",title:"Devtools Folder",description:"Reactotron",source:"@site/docs/ignite-cli/boilerplate/app/devtools/Devtools.md",sourceDirName:"ignite-cli/boilerplate/app/devtools",slug:"/ignite-cli/boilerplate/app/devtools/",permalink:"/ignite-cli/boilerplate/app/devtools/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"Ignite",previous:{title:"Config folder",permalink:"/ignite-cli/boilerplate/app/config/"},next:{title:"Internationalization in Ignite Apps",permalink:"/ignite-cli/boilerplate/app/i18n/Internationalization"}},c={},l=[{value:"Reactotron",id:"reactotron",level:2},{value:"ReactotronConfig.ts",id:"reactotronconfigts",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"devtools-folder",children:"Devtools Folder"}),"\n",(0,o.jsx)(t.h2,{id:"reactotron",children:"Reactotron"}),"\n",(0,o.jsx)(t.p,{children:"Ignite comes with Reactotron support for debugging your app.\nBy default, Reactotron is configured to work with web and mobile apps and is configured with a few plugins and commands we think are useful."}),"\n",(0,o.jsx)(t.h3,{id:"reactotronconfigts",children:"ReactotronConfig.ts"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"reactotron-mst"})," plugin is included for MobX-State-Tree support."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'import { mst } from "reactotron-mst"\nconst reactotron = Reactotron.configure({\n    ...\n}).use(\n  mst({\n    /** ignore some chatty `mobx-state-tree` actions  */\n    filter: (event) => /postProcessSnapshot|@APPLY_SNAPSHOT/.test(event.name) === false,\n  }),\n)\n'})}),"\n",(0,o.jsxs)(t.p,{children:["There are also a few custom commands included. You can use ",(0,o.jsx)(t.code,{children:"reactotron.onCustomCommand"})," to add your own own custom debugging tools to Reactotron. Here is an example:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'reactotron.onCustomCommand({\n  title: "Reset Navigation State",\n  description: "Resets the navigation state",\n  command: "resetNavigation",\n  handler: () => {\n    Reactotron.log("resetting navigation state")\n    resetRoot({ index: 0, routes: [] })\n  },\n})\n'})}),"\n",(0,o.jsxs)(t.p,{children:["For more info check out the ",(0,o.jsx)(t.a,{href:"https://docs.infinite.red/reactotron/",children:"Reactotron Documentation"})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var o=n(6540);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);