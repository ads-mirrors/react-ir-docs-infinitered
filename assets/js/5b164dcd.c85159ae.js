"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[7194],{8219:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=i(4848),l=i(8453);const a={sidebar_position:1,title:"Getting Started"},t="Getting Started with react-native-mlkit-image-labeling",o={id:"react-native-mlkit/image-labeling/index",title:"Getting Started",description:"Overview",source:"@site/docs/react-native-mlkit/image-labeling/index.md",sourceDirName:"react-native-mlkit/image-labeling",slug:"/react-native-mlkit/image-labeling/",permalink:"/react-native-mlkit/image-labeling/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Getting Started"},sidebar:"React Native MLKit",previous:{title:"Image Labeling",permalink:"/react-native-mlkit/image-labeling/list"},next:{title:"Image Labeler Options",permalink:"/react-native-mlkit/image-labeling/image-labeler-options"}},r={},d=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"1. Import necessary hooks and types:",id:"1-import-necessary-hooks-and-types",level:3},{value:"2. Define your models configuration:",id:"2-define-your-models-configuration",level:3},{value:"3. Set up the Provider:",id:"3-set-up-the-provider",level:3},{value:"4. Using the image labeler in your components:",id:"4-using-the-image-labeler-in-your-components",level:3},{value:"Core Components &amp; Hooks",id:"core-components--hooks",level:2},{value:"useImageLabelingModels",id:"useimagelabelingmodels",level:3},{value:"useImageLabelingProvider",id:"useimagelabelingprovider",level:3},{value:"useImageLabeling",id:"useimagelabeling",level:3},{value:"RNMLKitClassifier Methods",id:"rnmlkitclassifier-methods",level:3},{value:"Types",id:"types",level:2},{value:"ImageLabelingConfig",id:"imagelabelingconfig",level:3},{value:"ClassificationResult",id:"classificationresult",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"getting-started-with-react-native-mlkit-image-labeling",children:"Getting Started with react-native-mlkit-image-labeling"}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"react-native-mlkit-image-labeling"})," provides utilities for image classification using ML Kit in React Native apps. It\nallows for the classification of images using either ML Kit's built-in models or custom TensorFlow Lite models."]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"npm install @infinitered/react-native-mlkit-image-labeling expo-asset\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"1-import-necessary-hooks-and-types",children:"1. Import necessary hooks and types:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import {\n  useImageLabeling,\n  useImageLabelingProvider,\n  useImageLabelingModels,\n  ImageLabelingConfig,\n  ClassificationResult\n} from "@infinitered/react-native-mlkit-image-labeling";\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-define-your-models-configuration",children:"2. Define your models configuration:"}),"\n",(0,s.jsxs)(n.p,{children:["Create an ",(0,s.jsx)(n.code,{children:"ImageLabelingConfig"})," object that identifies your model files and options:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const MODELS: ImageLabelingConfig = {\n  nsfw: {\n    model: require("./path/to/model.tflite"),\n    options: {\n      maxResultCount: 5,\n      confidenceThreshold: 0.5,\n    },\n  },\n};\n'})}),"\n",(0,s.jsx)(n.h3,{id:"3-set-up-the-provider",children:"3. Set up the Provider:"}),"\n",(0,s.jsx)(n.p,{children:"The image labeling functionality requires a provider at the root of your app or where you plan to use the models:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"function App() {\n  const models = useImageLabelingModels(MODELS);\n  const { ImageLabelingModelProvider } = useImageLabelingProvider(models);\n\n  return (\n    <ImageLabelingModelProvider>\n      <YourApp />\n    </ImageLabelingModelProvider>\n  );\n}\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-using-the-image-labeler-in-your-components",children:"4. Using the image labeler in your components:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'function ImageClassifier() {\n// Get the classifier instance for your model\n  const classifier = useImageLabeling("nsfw");\n\n  const classifyImage = async (imageUri: string) => {\n    try {\n      const result = await classifier.classifyImage(imageUri);\n      console.log(result);\n    } catch (error) {\n      console.error("Classification failed:", error);\n    }\n  };\n\n  return (\n    <View>\n      // ....your component\n    </View>\n  );\n}\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"core-components--hooks",children:"Core Components & Hooks"}),"\n",(0,s.jsx)(n.h3,{id:"useimagelabelingmodels",children:"useImageLabelingModels"}),"\n",(0,s.jsx)(n.p,{children:"Loads and initializes the models from their asset files."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const models = useImageLabelingModels(MODELS);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"useimagelabelingprovider",children:"useImageLabelingProvider"}),"\n",(0,s.jsx)(n.p,{children:"Creates a provider component that manages the image labeling models context."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const { ImageLabelingModelProvider } = useImageLabelingProvider(models);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"useimagelabeling",children:"useImageLabeling"}),"\n",(0,s.jsx)(n.p,{children:"Returns a classifier instance for a specific model."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const classifier = useImageLabeling("modelName");\n'})}),"\n",(0,s.jsx)(n.h3,{id:"rnmlkitclassifier-methods",children:"RNMLKitClassifier Methods"}),"\n",(0,s.jsx)(n.p,{children:"The classifier instance provides these methods:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isLoaded(): boolean"})," - Checks if the model is currently loaded and ready for classification"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"classifyImage(imagePath: string): Promise<ClassificationResult>"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"updateOptionsAndReload(newOptions: CustomImageLabelerOptions): Promise<void>"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,s.jsx)(n.h3,{id:"imagelabelingconfig",children:"ImageLabelingConfig"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"type ImageLabelingConfig = Record<string, {\n  model: number; // Asset require number\n  options?: {\n    maxResultCount?: number;\n    confidenceThreshold?: number;\n  };\n}>;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"classificationresult",children:"ClassificationResult"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"type ClassificationResult = Array<{\n  text: string;\n  index: number;\n  confidence: number;\n}>;\n"})})]})}function g(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const l={},a=s.createContext(l);function t(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);