"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[6891],{8615:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var t=n(4848),l=n(8453);const r={title:"Global Logs"},s="Documentation: trackGlobalLogs",c={id:"reactotron/plugins/track-global-logs",title:"Global Logs",description:"Overview",source:"@site/docs/reactotron/plugins/track-global-logs.md",sourceDirName:"reactotron/plugins",slug:"/reactotron/plugins/track-global-logs",permalink:"/reactotron/plugins/track-global-logs",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Global Logs"},sidebar:"Reactotron",previous:{title:"Global Errors",permalink:"/reactotron/plugins/track-global-errors"},next:{title:"Tips and Tricks",permalink:"/reactotron/tips"}},a={},i=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:3},{value:"Default",id:"default",level:4},{value:"Custom",id:"custom",level:4},{value:"How It Works Internally",id:"how-it-works-internally",level:3}];function d(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.h1,{id:"documentation-trackgloballogs",children:["Documentation: ",(0,t.jsx)(o.code,{children:"trackGlobalLogs"})]}),"\n",(0,t.jsx)(o.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(o.p,{children:["The ",(0,t.jsx)(o.code,{children:"trackGlobalLogs"})," plugin for Reactotron is designed to intercept calls made to ",(0,t.jsx)(o.code,{children:"console.log"}),", ",(0,t.jsx)(o.code,{children:"console.warn"}),", and ",(0,t.jsx)(o.code,{children:"console.debug"}),", forwarding them to the Reactotron logger. This functionality is useful for monitoring and analyzing logs within your React Native or React JS applications."]}),"\n",(0,t.jsx)(o.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(o.p,{children:["To integrate the ",(0,t.jsx)(o.code,{children:"trackGlobalLogs"})," plugin into your Reactotron setup, follow these steps:"]}),"\n",(0,t.jsx)(o.h4,{id:"default",children:"Default"}),"\n",(0,t.jsxs)(o.p,{children:["This plugin is included by default in Reactotron when using ",(0,t.jsx)(o.code,{children:"reactotron-react-native"}),"."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-js",children:'import Reactotron from "reactotron-react-native";\n\nReactotron.configure()\n  .useReactNative() // included by default\n  .connect();\n'})}),"\n",(0,t.jsx)(o.h4,{id:"custom",children:"Custom"}),"\n",(0,t.jsxs)(o.p,{children:["If are not using the ",(0,t.jsx)(o.code,{children:"useReactNative"})," method for some reason, you can add the plugin manually like so:"]}),"\n",(0,t.jsxs)(o.ol,{children:["\n",(0,t.jsxs)(o.li,{children:["Import the ",(0,t.jsx)(o.code,{children:"trackGlobalLogs"})," function from the Reactotron package:"]}),"\n"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-js",children:'import Reactotron, { trackGlobalLogs } from "reactotron-react-native";\n'})}),"\n",(0,t.jsxs)(o.ol,{start:"2",children:["\n",(0,t.jsxs)(o.li,{children:["Add the ",(0,t.jsx)(o.code,{children:"trackGlobalLogs"})," plugin to your Reactotron configuration as shown below:"]}),"\n"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-js",children:"Reactotron.configure().use(trackGlobalLogs()).connect();\n"})}),"\n",(0,t.jsx)(o.p,{children:"This enables the plugin to start intercepting global logs once your Reactotron instance is connected."}),"\n",(0,t.jsx)(o.h3,{id:"how-it-works-internally",children:"How It Works Internally"}),"\n",(0,t.jsxs)(o.p,{children:["For both React Native and React JS applications, the ",(0,t.jsx)(o.code,{children:"trackGlobalLogs"})," plugin works by monkey-patching references to ",(0,t.jsx)(o.code,{children:"console.log"}),", ",(0,t.jsx)(o.code,{children:"console.warn"}),", and ",(0,t.jsx)(o.code,{children:"console.debug"}),". It intercepts calls to these console methods and, in addition to the original console output, also sends the log data to the Reactotron logger for further analysis."]}),"\n",(0,t.jsxs)(o.p,{children:["Please note that there are no additional configuration options provided by the plugin itself. It automatically captures ",(0,t.jsx)(o.code,{children:"console.log"}),", ",(0,t.jsx)(o.code,{children:"console.warn"}),", and ",(0,t.jsx)(o.code,{children:"console.debug"})," calls without any customization options."]})]})}function u(e={}){const{wrapper:o}={...(0,l.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>c});var t=n(6540);const l={},r=t.createContext(l);function s(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);