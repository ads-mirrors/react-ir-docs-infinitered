"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[7427],{204:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=n(4848),o=n(8453);const r={sidebar_position:200},c="Advanced Usage",a={id:"react-native-mlkit/face-detection/advanced-usage",title:"Advanced Usage",description:"For users looking for more granular control over face detection or wanting to explore advanced features, this guide",source:"@site/docs/react-native-mlkit/face-detection/advanced-usage.md",sourceDirName:"react-native-mlkit/face-detection",slug:"/react-native-mlkit/face-detection/advanced-usage",permalink:"/react-native-mlkit/face-detection/advanced-usage",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:200,frontMatter:{sidebar_position:200},sidebar:"React Native MLKit",previous:{title:"Getting Started",permalink:"/react-native-mlkit/face-detection/getting-started"},next:{title:"Options",permalink:"/react-native-mlkit/face-detection/options"}},s={},d=[{value:"1. Direct Access to the Face Detector",id:"1-direct-access-to-the-face-detector",level:2},{value:"2. Deferred Initialization",id:"2-deferred-initialization",level:2},{value:"Error Handling",id:"error-handling",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,i.jsx)(t.p,{children:"For users looking for more granular control over face detection or wanting to explore advanced features, this guide\ndives deeper."}),"\n",(0,i.jsx)(t.h2,{id:"1-direct-access-to-the-face-detector",children:"1. Direct Access to the Face Detector"}),"\n",(0,i.jsxs)(t.p,{children:["For advanced scenarios, you might want direct access to the face detector instance. The ",(0,i.jsx)(t.code,{children:"useFaceDetection"})," hook allows\nyou to get the instance and work with it directly."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"\nimport {\n  useFaceDetection,\n  RNMLKitFaceDetectorOptions,\n  RNMLKitFaceDetector\n} from \"@infinitered/react-native-mlkit-face-detection\";\n\nfunction AdvancedFaceComponent() {\n  const model = useFaceDetection();\n\n  // You can now call methods directly on the faceDetector instance\n  // Example:\n  const result = model.detectFaces('local_uri_of_your_image_uri');\n\n\n  // or initialize the detector with or without custom options\n  const initializeDetector = React.useCallback((options: RNMLKitFaceDetectorOptions | undefined) => {\n    model.initialize(options);\n  }, [faceDetector]);\n\n  // rest of your component\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"#2-deferred-initialization",children:"link"})}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"useFaceDetection"})," hook gives you maximum flexibility but requires a deeper understanding of the detector's API.\nAlways refer back to the official documentation if in doubt."]})}),"\n",(0,i.jsx)(t.h2,{id:"2-deferred-initialization",children:"2. Deferred Initialization"}),"\n",(0,i.jsxs)(t.p,{children:["By default, the face detector initializes immediately upon the component's mount. However, in scenarios where you'd like\nto defer this initialization (maybe due to performance considerations or user-triggered actions), you can do so by\nsetting the ",(0,i.jsx)(t.code,{children:"deferInitialization"})," flag prop."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"function App() {\n  return (\n    <FaceDetectionProvider\n      options={FACE_DETECTION_OPTIONS}\n      deferInitialization\n    >\n      {/* rest of your app goes here */}\n    </FaceDetectionProvider>\n  );\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Then, when you're ready to initialize the detector you can simply call the ",(0,i.jsx)(t.code,{children:"initialize"})," method:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:'import { useEffect } from "react";\n\nfunction MyComponent() {\n  const detector = useFaceDetection();\n  useEffect(() => {\n    detector.initialize();\n  }, []);\n\n  //...rest of your component\n}\n'})}),"\n",(0,i.jsxs)(t.admonition,{type:"caution",children:[(0,i.jsx)(t.p,{children:"Remember that the face detector will not work until it's initialized."}),(0,i.jsx)(t.p,{children:"Ensure that it's initialized before trying to detect faces with it."})]}),"\n",(0,i.jsx)(t.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsxs)(t.p,{children:["The face detector includes built-in error handling that will update the detector's status to ",(0,i.jsx)(t.code,{children:"'error'"})," and log error\nmessages to the console. When using the detector directly, you should handle potential errors:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"const detectFaces = async () => {\n  try {\n    const result = await faceDetector.detectFaces(imageUri);\n    if (!result) {\n      // Handle undefined result case\n      return;\n    }\n    // Process result.faces\n  } catch (error) {\n    // Handle error case\n    console.error('Face detection failed:', error);\n  }\n};\n"})}),"\n",(0,i.jsx)(t.p,{children:"That's it for the advanced usage! Dive deep, and feel free to ask any questions in the community forums."})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var i=n(6540);const o={},r=i.createContext(o);function c(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);