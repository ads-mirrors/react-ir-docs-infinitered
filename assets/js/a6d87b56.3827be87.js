"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[6538],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(a),f=r,g=u["".concat(o,".").concat(f)]||u[f]||c[f]||i;return a?n.createElement(g,l(l({ref:t},d),{},{components:a})):n.createElement(g,l({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=f;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},1874:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={sidebar_position:61},l="useSafeAreaInsetsStyle",s={unversionedId:"ignite-cli/boilerplate/app/utils/useSafeAreaInsetsStyle.ts",id:"ignite-cli/boilerplate/app/utils/useSafeAreaInsetsStyle.ts",title:"useSafeAreaInsetsStyle",description:"The useSafeAreaInsetsStyle() hook can be used to create a safe-area-aware style object that can be passed directly to a View.",source:"@site/docs/ignite-cli/boilerplate/app/utils/useSafeAreaInsetsStyle.ts.md",sourceDirName:"ignite-cli/boilerplate/app/utils",slug:"/ignite-cli/boilerplate/app/utils/useSafeAreaInsetsStyle.ts",permalink:"/ignite-cli/boilerplate/app/utils/useSafeAreaInsetsStyle.ts",draft:!1,tags:[],version:"current",sidebarPosition:61,frontMatter:{sidebar_position:61},sidebar:"Ignite",previous:{title:"utils",permalink:"/ignite-cli/boilerplate/app/utils/"},next:{title:"useHeader",permalink:"/ignite-cli/boilerplate/app/utils/useHeader.tsx"}},o={},p=[{value:"Parameters",id:"parameters",level:2},{value:"<code>safeAreaEdges: ExtendedEdge[]</code>",id:"safeareaedges-extendededge",level:3},{value:"<code>property: &quot;padding&quot; | &quot;margin&quot;</code>",id:"property-padding--margin",level:3},{value:"Types",id:"types",level:2},{value:"<code>ExtendedEdge</code>",id:"extendededge",level:3}],d={toc:p},u="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"usesafeareainsetsstyle"},"useSafeAreaInsetsStyle"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"useSafeAreaInsetsStyle()")," hook can be used to create a safe-area-aware style object that can be passed directly to a View."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'<View style={useSafeAreaInsetsStyle(["top"], "padding")} />\n')),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("h3",{id:"safeareaedges-extendededge"},(0,r.kt)("inlineCode",{parentName:"h3"},"safeAreaEdges: ExtendedEdge[]")),(0,r.kt)("p",null,"The first parameter is a list of edges that need to be safe-area-aware. In order for the hook to return an object with values, at least one edge needs to be provided. Default is ",(0,r.kt)("inlineCode",{parentName:"p"},"[]"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'const $insetsStyle = useSafeAreaInsetsStyle(["top", "left"])\n\nconsole.log($insetsStyle) // { paddingTop: 47, paddingStart: 0 }\n')),(0,r.kt)("h3",{id:"property-padding--margin"},(0,r.kt)("inlineCode",{parentName:"h3"},'property: "padding" | "margin"')),(0,r.kt)("p",null,"The second parameter specifies the property prefix that will be used to compose the style object. Default is ",(0,r.kt)("inlineCode",{parentName:"p"},"padding"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'const $insetsPaddingStyle = useSafeAreaInsetsStyle(["bottom"], "padding")\nconst $insetsMarginStyle = useSafeAreaInsetsStyle(["bottom"], "margin")\n\nconsole.log($insetsPaddingStyle) // { paddingBottom: 28 }\nconsole.log($insetsMarginStyle) // { marginBottom: 28 }\n')),(0,r.kt)("h2",{id:"types"},"Types"),(0,r.kt)("h3",{id:"extendededge"},(0,r.kt)("inlineCode",{parentName:"h3"},"ExtendedEdge")),(0,r.kt)("p",null,"A safe-area edge:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"top"),(0,r.kt)("li",{parentName:"ul"},"bottom"),(0,r.kt)("li",{parentName:"ul"},"left"),(0,r.kt)("li",{parentName:"ul"},"right"),(0,r.kt)("li",{parentName:"ul"},"start"),(0,r.kt)("li",{parentName:"ul"},"end")),(0,r.kt)("p",null,'Note: "start" maps to the "left" value. "end" maps to "right.'))}c.isMDXComponent=!0}}]);