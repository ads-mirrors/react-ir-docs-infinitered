"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[133],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(t),g=r,d=p["".concat(c,".").concat(g)]||p[g]||m[g]||a;return t?o.createElement(d,l(l({ref:n},u),{},{components:t})):o.createElement(d,l({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=g;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},4339:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var o=t(7462),r=(t(7294),t(3905));const a={},l=void 0,i={unversionedId:"gluegun/toolbox-meta",id:"gluegun/toolbox-meta",title:"toolbox-meta",description:"Provides functions for accessing information about the currently running CLI. You can access this on the Gluegun toolbox.",source:"@site/docs/gluegun/toolbox-meta.md",sourceDirName:"gluegun",slug:"/gluegun/toolbox-meta",permalink:"/ir-docs/docs/gluegun/toolbox-meta",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"gluegun",previous:{title:"toolbox-http",permalink:"/ir-docs/docs/gluegun/toolbox-http"},next:{title:"toolbox-package-manager",permalink:"/ir-docs/docs/gluegun/toolbox-package-manager"}},c={},s=[{value:"src",id:"src",level:2},{value:"version",id:"version",level:2},{value:"packageJSON",id:"packagejson",level:2},{value:"checkForUpdate",id:"checkforupdate",level:2},{value:"commandInfo",id:"commandinfo",level:2},{value:"onAbort",id:"onabort",level:2}],u={toc:s},p="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Provides functions for accessing information about the currently running CLI. You can access this on the Gluegun toolbox."),(0,r.kt)("h2",{id:"src"},"src"),(0,r.kt)("p",null,"The currently running CLI's source folder."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'toolbox.meta.src // "/Users/jh/Code/gluegun"\n')),(0,r.kt)("h2",{id:"version"},"version"),(0,r.kt)("p",null,"Retrieves the currently running CLI's version."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"toolbox.meta.version() // '1.0.0'\n")),(0,r.kt)("h2",{id:"packagejson"},"packageJSON"),(0,r.kt)("p",null,"Retrieves the currently running CLI's package.json contents as an object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"toolbox.meta.packageJSON()\n// { name: 'gluegun', version: '9.4.2', ... }\n")),(0,r.kt)("h2",{id:"checkforupdate"},"checkForUpdate"),(0,r.kt)("p",null,"Async function that checks NPM to see if there's an update to the currently running CLI."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const newVersion = await toolbox.meta.checkForUpdate()\n// false (if none exists)\n// '9.4.3' (new version if exists)\nif (newVersion) {\n  toolbox.print.info(`New version available: ${newVersion})`)\n}\n")),(0,r.kt)("h2",{id:"commandinfo"},"commandInfo"),(0,r.kt)("p",null,"Retrieves information about all of this CLI's commands. You can use this to display a custom help screen, for example."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const commandInfo = toolbox.meta.commandInfo()\ntoolbox.print.table(commandInfo)\n")),(0,r.kt)("h2",{id:"onabort"},"onAbort"),(0,r.kt)("p",null,"Executes the given callback when a ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/api/process.html#process_signal_events"},"termination signal")," is received. These signals are ",(0,r.kt)("inlineCode",{parentName:"p"},"SIGINT"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"SIGQUIT"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"SIGTERM"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"SIGHUP"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"SIGBREAK"),". If callback returns a promise, it will wait for promise to resolve before aborting."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"toolbox.meta.onAbort((signal) => {\n  console.log('Received termination signal', signal)\n})\n")))}m.isMDXComponent=!0}}]);