"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[4042],{8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>t});var r=n(6540);const l={},a=r.createContext(l);function i(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(a.Provider,{value:s},e.children)}},8897:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"gluegun/toolbox-api/strings","title":"strings","description":"Provides some helper functions to work with strings. This list is also added to the available filters","source":"@site/docs/gluegun/toolbox-api/strings.md","sourceDirName":"gluegun/toolbox-api","slug":"/gluegun/toolbox-api/strings","permalink":"/gluegun/toolbox-api/strings","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"Gluegun","previous":{"title":"semver","permalink":"/gluegun/toolbox-api/semver"},"next":{"title":"system","permalink":"/gluegun/toolbox-api/system"}}');var l=n(4848),a=n(8453);const i={},t="strings",d={},o=[{value:"<strong>Utility</strong>",id:"utility",level:2},{value:"identity",id:"identity",level:2},{value:"isBlank",id:"isblank",level:2},{value:"isNotString",id:"isnotstring",level:2},{value:"<strong>Growing</strong>",id:"growing",level:2},{value:"pad",id:"pad",level:2},{value:"padStart",id:"padstart",level:2},{value:"padEnd",id:"padend",level:2},{value:"repeat",id:"repeat",level:2},{value:"<strong>Shrinking</strong>",id:"shrinking",level:2},{value:"trim",id:"trim",level:2},{value:"trimStart",id:"trimstart",level:2},{value:"trimEnd",id:"trimend",level:2},{value:"<strong>Case Conversion</strong>",id:"case-conversion",level:2},{value:"camelCase",id:"camelcase",level:2},{value:"kebabCase",id:"kebabcase",level:2},{value:"snakeCase",id:"snakecase",level:2},{value:"upperCase",id:"uppercase",level:2},{value:"lowerCase",id:"lowercase",level:2},{value:"startCase",id:"startcase",level:2},{value:"upperFirst",id:"upperfirst",level:2},{value:"lowerFirst",id:"lowerfirst",level:2},{value:"pascalCase",id:"pascalcase",level:2},{value:"pluralize",id:"pluralize",level:2},{value:"plural",id:"plural",level:2},{value:"singular",id:"singular",level:2},{value:"isPlural",id:"isplural",level:2},{value:"isSingular",id:"issingular",level:2},{value:"addPluralRule",id:"addpluralrule",level:2},{value:"addSingularRule",id:"addsingularrule",level:2},{value:"addIrregularRule",id:"addirregularrule",level:2},{value:"addUncountableRule",id:"adduncountablerule",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"strings",children:"strings"})}),"\n",(0,l.jsx)(s.p,{children:"Provides some helper functions to work with strings. This list is also added to the available filters\ninside your EJS templates."}),"\n",(0,l.jsxs)(s.p,{children:["You can access these tools on the Gluegun toolbox, via ",(0,l.jsx)(s.code,{children:"const { strings } = require('gluegun')"}),", or directly via ",(0,l.jsx)(s.code,{children:"const { strings } = require('gluegun/strings')"}),"."]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"utility",children:(0,l.jsx)(s.strong,{children:"Utility"})}),"\n",(0,l.jsx)(s.h2,{id:"identity",children:"identity"}),"\n",(0,l.jsxs)(s.p,{children:["Returns the ",(0,l.jsx)(s.strong,{children:"input"})," as ",(0,l.jsx)(s.strong,{children:"output"}),". Great for functional programming like sorting or fallbacks."]}),"\n",(0,l.jsx)(s.p,{children:"** arguments **"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"value"})," can be ",(0,l.jsx)(s.code,{children:"any"})," type which becomes the return value of this function."]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"** returns **"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:["the ",(0,l.jsx)(s.code,{children:"value"})," that was passed in"]}),"\n"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"identity('hello') // hello\nidentity(4) // 4\nidentity([1, 'a']) // [1, 'a']\n"})}),"\n",(0,l.jsx)(s.h2,{id:"isblank",children:"isBlank"}),"\n",(0,l.jsx)(s.p,{children:"Determines if a string is empty by trimming it first."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"isBlank('') // true\nisBlank('   ') // true\n"})}),"\n",(0,l.jsx)(s.h2,{id:"isnotstring",children:"isNotString"}),"\n",(0,l.jsx)(s.p,{children:"Tests a value to see if it is not a string."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"isNotString(true) // true\nisNotString(null) // true\nisNotString(undefined) // true\nisNotString(123) // true\nisNotString('hi') // false\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"growing",children:(0,l.jsx)(s.strong,{children:"Growing"})}),"\n",(0,l.jsx)(s.h2,{id:"pad",children:"pad"}),"\n",(0,l.jsx)(s.p,{children:"Centers a string to a given length."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"pad('hola', 20) // '        hola        '\n"})}),"\n",(0,l.jsx)(s.h2,{id:"padstart",children:"padStart"}),"\n",(0,l.jsx)(s.p,{children:"Fills a string to a certain length by adding characters to the front."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"padStart('hello', 10, '.') // '.....hello'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"padend",children:"padEnd"}),"\n",(0,l.jsx)(s.p,{children:"Fills a string to a certain length by adding characters to the end."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"padEnd('hello', 10, '!') // 'hello!!!!!'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"repeat",children:"repeat"}),"\n",(0,l.jsx)(s.p,{children:"Repeats a string a number of times to make a pattern."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"repeat('x', 3) // 'xxx'\nrepeat('xo', 3) // 'xoxoxo'\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"shrinking",children:(0,l.jsx)(s.strong,{children:"Shrinking"})}),"\n",(0,l.jsx)(s.h2,{id:"trim",children:"trim"}),"\n",(0,l.jsx)(s.p,{children:"Strips white space from both the start and end of a string, but not the middle."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"trim('    kevin   spacey    ') // 'kevin   spacey'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"trimstart",children:"trimStart"}),"\n",(0,l.jsx)(s.p,{children:"Strips white space from the start of a string."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"trimStart('          hi ') // 'hi '\n"})}),"\n",(0,l.jsx)(s.h2,{id:"trimend",children:"trimEnd"}),"\n",(0,l.jsx)(s.p,{children:"Strips white space from the end of a string."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"trimEnd('windows!\\r\\n') // 'windows!'\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"case-conversion",children:(0,l.jsx)(s.strong,{children:"Case Conversion"})}),"\n",(0,l.jsx)(s.h2,{id:"camelcase",children:"camelCase"}),"\n",(0,l.jsx)(s.p,{children:"Capitalizes the first letter of each word it smashes together on word boundaries. The first letter becomes lowercase. Puncuation gets dropped."}),"\n",(0,l.jsx)(s.p,{children:"Great for assembling javascript variable names."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"camelCase('hello there') // 'helloThere'\ncamelCase('Hello there') // 'helloThere'\ncamelCase('abc123') // 'abc123'\ncamelCase('Y M C A') // 'yMCA'\ncamelCase('Welcome to ZOMBO.com') // 'welcomeToZomboCom'\ncamelCase('XMLHttpRequest is strange.') // 'xmlHttpRequestIsStrange'\ncamelCase('OSnap') // 'oSnap'\ncamelCase('this.is.sparta!') // 'thisIsSparta'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"kebabcase",children:"kebabCase"}),"\n",(0,l.jsx)(s.p,{children:"Skewers words by placing - characters between them and downcasing."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"kebabCase('hello there') // 'hello-there'\nkebabCase('Hello there') // 'hello-there'\nkebabCase('abc123') // 'abc-123'\nkebabCase('Y M C A') // 'y-m-c-a'\nkebabCase('Welcome to ZOMBO.com') // 'welcome-to-zombo-com'\nkebabCase('XMLHttpRequest is strange.') // 'xml-http-request-is-strange'\nkebabCase('OSnap') // 'o-snap'\nkebabCase('this.is.sparta!') // 'this-is-sparta'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"snakecase",children:"snakeCase"}),"\n",(0,l.jsx)(s.p,{children:"Joins words together with underscores after splitting up into word boundaries."}),"\n",(0,l.jsx)(s.p,{children:"Great for ruby and some apis."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"snakeCase('hello there') // 'hello_there'\nsnakeCase('Hello there') // 'hello_there'\nsnakeCase('abc123') // 'abc_123'\nsnakeCase('Y M C A') // 'y_m_c_a'\nsnakeCase('Welcome to ZOMBO.com') // 'welcome_to_zombo_com'\nsnakeCase('XMLHttpRequest is strange.') // 'xml_http_request_is_strange'\nsnakeCase('OSnap') // 'o_snap'\nsnakeCase('this.is.sparta!') // 'this_is_sparta'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"uppercase",children:"upperCase"}),"\n",(0,l.jsx)(s.p,{children:"A staple in every troll's toolbelt, this makes everything uppercase."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"upperCase('hello there') // 'HELLO THERE'\nupperCase('Hello there') // 'HELLO THERE'\nupperCase('abc123') // 'ABC 123'\nupperCase('Y M C A') // 'Y M C A'\nupperCase('Welcome to ZOMBO.com') // 'WELCOME TO ZOMBO COM'\nupperCase('XMLHttpRequest is strange.') // 'XML HTTP REQUEST IS STRANGE'\nupperCase('OSnap') // 'O SNAP'\nupperCase('this.is.sparta!') // 'THIS IS SPARTA'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"lowercase",children:"lowerCase"}),"\n",(0,l.jsx)(s.p,{children:"This makes everything lower case."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"lowerCase('hello there') // 'hello there'\nlowerCase('Hello there') // 'hello there'\nlowerCase('abc123') // 'abc 123'\nlowerCase('Y M C A') // 'y m c a'\nlowerCase('Welcome to ZOMBO.com') // 'welcome to zombo com'\nlowerCase('XMLHttpRequest is strange.') // 'xml http request is strange'\nlowerCase('OSnap') // 'o snap'\nlowerCase('this.is.sparta!') // 'this is sparta'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"startcase",children:"startCase"}),"\n",(0,l.jsx)(s.p,{children:"Uppercases the first letter of each word after dicing up on word boundaries."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"startCase('hello there') // 'Hello There'\nstartCase('Hello there') // 'Hello There'\nstartCase('abc123') // 'Abc 123'\nstartCase('Y M C A') // 'Y M C A'\nstartCase('Welcome to ZOMBO.com') // 'Welcome To ZOMBO Com'\nstartCase('XMLHttpRequest is strange.') // 'XML Http Request Is Strange'\nstartCase('OSnap') // 'O Snap'\nstartCase('this.is.sparta!') // 'This Is Sparta'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"upperfirst",children:"upperFirst"}),"\n",(0,l.jsx)(s.p,{children:"Uppercases the first letter of the string."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"upperFirst('hello there') // 'Hello there'\nupperFirst('Hello there') // 'Hello there'\nupperFirst('abc123') // 'Abc123'\nupperFirst('Y M C A') // 'Y M C A'\nupperFirst('Welcome to ZOMBO.com') // 'Welcome to ZOMBO.com'\nupperFirst('XMLHttpRequest is strange.') // 'XMLHttpRequest is strange.'\nupperFirst('OSnap') // 'OSnap'\nupperFirst('this.is.sparta!') // 'This.is.sparta!'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"lowerfirst",children:"lowerFirst"}),"\n",(0,l.jsx)(s.p,{children:"Lowercases the first letter of the string."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"lowerFirst('hello there') // 'hello there'\nlowerFirst('Hello there') // 'hello there'\nlowerFirst('abc123') // 'abc123'\nlowerFirst('Y M C A') // 'y M C A'\nlowerFirst('Welcome to ZOMBO.com') // 'welcome to ZOMBO.com'\nlowerFirst('XMLHttpRequest is strange.') // 'xMLHttpRequest is strange.'\nlowerFirst('OSnap') // 'oSnap'\nlowerFirst('this.is.sparta!') // 'this.is.sparta!'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"pascalcase",children:"pascalCase"}),"\n",(0,l.jsxs)(s.p,{children:["This is ",(0,l.jsx)(s.code,{children:"camelCase"})," + ",(0,l.jsx)(s.code,{children:"upperFirst"}),"."]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-js",children:"pascalCase('hello there') // 'HelloThere'\npascalCase('Hello there') // 'HelloThere'\npascalCase('abc123') // 'Abc123'\npascalCase('Y M C A') // 'YMCA'\npascalCase('Welcome to ZOMBO.com') // 'WelcomeToZomboCom'\npascalCase('XMLHttpRequest is strange.') // 'XmlHttpRequestIsStrange'\npascalCase('OSnap') // 'OSnap'\npascalCase('this.is.sparta!') // 'ThisIsSparta'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"pluralize",children:"pluralize"}),"\n",(0,l.jsx)(s.p,{children:"Pluralize or singularize a word based on the passed in count."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"pluralize('test', 1) // 'test'\npluralize('test', 5) // 'tests'\npluralize('test', 1, true) // '1 test'\npluralize('test', 5, true) // '5 tests'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"plural",children:"plural"}),"\n",(0,l.jsx)(s.p,{children:"Converts a given singular word to plural."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"plural('bug') // 'bugs'\nplural('word') // 'words'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"singular",children:"singular"}),"\n",(0,l.jsx)(s.p,{children:"Converts a given plural word to singular."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"singular('bugs') // 'bug'\nsingular('words') // 'word'\n"})}),"\n",(0,l.jsx)(s.h2,{id:"isplural",children:"isPlural"}),"\n",(0,l.jsx)(s.p,{children:"Checks if the give word is plural."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"isPlural('bugs') // true\nisPlural('bug') // false\n"})}),"\n",(0,l.jsx)(s.h2,{id:"issingular",children:"isSingular"}),"\n",(0,l.jsx)(s.p,{children:"Checks if the give word is singular."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"isSingular('bugs') // false\nisSingular('bug') // true\n"})}),"\n",(0,l.jsx)(s.h2,{id:"addpluralrule",children:"addPluralRule"}),"\n",(0,l.jsx)(s.p,{children:"Adds a pluralization rule for the given singular word when calling plural."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"addPluralRule('regex', 'regexii')\naddPluralRule(/regex$/, 'regexii')\n"})}),"\n",(0,l.jsx)(s.h2,{id:"addsingularrule",children:"addSingularRule"}),"\n",(0,l.jsx)(s.p,{children:"Adds a pluralization rule for the given plural word when calling singular."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"addSingularRule('regexii', 'regex')\naddSingularRule(/regexii$/, 'regex')\n"})}),"\n",(0,l.jsx)(s.h2,{id:"addirregularrule",children:"addIrregularRule"}),"\n",(0,l.jsx)(s.p,{children:"Adds a pluralization rule for the given irregular word when calling plural."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"addIrregularRule('octopus', 'octopodes')\n"})}),"\n",(0,l.jsx)(s.h2,{id:"adduncountablerule",children:"addUncountableRule"}),"\n",(0,l.jsx)(s.p,{children:"Exempts the given uncountable word from pluralization so that calling plural or singular with that word will return the same word unchanged."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"addUncountableRule('paper')\n"})})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);