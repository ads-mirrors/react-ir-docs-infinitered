"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[3417],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),c=s(n),h=i,u=c["".concat(p,".").concat(h)]||c[h]||m[h]||a;return n?o.createElement(u,l(l({ref:t},d),{},{components:n})):o.createElement(u,l({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=h;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r[c]="string"==typeof e?e:i,l[1]=r;for(var s=2;s<a;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2346:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>s});var o=n(7462),i=(n(7294),n(3905));const a={sidebar_position:36},l="ListItem",r={unversionedId:"ignite-cli/boilerplate/components/ListItem",id:"ignite-cli/boilerplate/components/ListItem",title:"ListItem",description:"The ListItem component is a component that is used to display a single item in a list. It provides a lot of flexibility in terms of what you can do with it. It can be used to display a simple piece text, or a complex component with multiple actionable and custom styled elements inside.",source:"@site/docs/ignite-cli/boilerplate/components/ListItem.md",sourceDirName:"ignite-cli/boilerplate/components",slug:"/ignite-cli/boilerplate/components/ListItem",permalink:"/ignite-cli/boilerplate/components/ListItem",draft:!1,tags:[],version:"current",sidebarPosition:36,frontMatter:{sidebar_position:36},sidebar:"Ignite",previous:{title:"Icon",permalink:"/ignite-cli/boilerplate/components/Icon"},next:{title:"ListView",permalink:"/ignite-cli/boilerplate/components/ListView"}},p={},s=[{value:"Props",id:"props",level:2},{value:"<code>height</code>",id:"height",level:3},{value:"<code>topSeparator</code> and <code>bottomSeparator</code>",id:"topseparator-and-bottomseparator",level:3},{value:"<code>text</code>",id:"text",level:3},{value:"<code>tx</code>",id:"tx",level:3},{value:"<code>children</code>",id:"children",level:3},{value:"<code>txOptions</code>",id:"txoptions",level:3},{value:"<code>textStyle</code>",id:"textstyle",level:3},{value:"<code>TextProps</code>",id:"textprops",level:3},{value:"<code>containerStyle</code>",id:"containerstyle",level:3},{value:"<code>style</code>",id:"style",level:3},{value:"<code>leftIcon</code> and <code>rightIcon</code>",id:"lefticon-and-righticon",level:3},{value:"<code>leftIconColor</code> and <code>rightIconColor</code>",id:"lefticoncolor-and-righticoncolor",level:3},{value:"<code>RightComponent</code> and <code>LeftComponent</code>",id:"rightcomponent-and-leftcomponent",level:3}],d={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"listitem"},"ListItem"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component is a component that is used to display a single item in a list. It provides a lot of flexibility in terms of what you can do with it. It can be used to display a simple piece text, or a complex component with multiple actionable and custom styled elements inside."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<ListItem height={50} />\n")),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("p",null,"As the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component is interactable, it includes a ",(0,i.kt)("inlineCode",{parentName:"p"},"TouchableOpacity")," component, which means that in addition to the custom props listed here, you can pass any props that are valid for a ",(0,i.kt)("inlineCode",{parentName:"p"},"TouchableOpacity")," component."),(0,i.kt)("h3",{id:"height"},(0,i.kt)("inlineCode",{parentName:"h3"},"height")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"height")," prop is used to set the height of the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component. The default is ",(0,i.kt)("inlineCode",{parentName:"p"},"56"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<ListItem height={50} />\n")),(0,i.kt)("h3",{id:"topseparator-and-bottomseparator"},(0,i.kt)("inlineCode",{parentName:"h3"},"topSeparator")," and ",(0,i.kt)("inlineCode",{parentName:"h3"},"bottomSeparator")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"topSeparator")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"bottomSeparator")," props are used to display a separator above or below the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component. The default is ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<ListItem topSeparator={true} bottomSeparator={true} />\n")),(0,i.kt)("h3",{id:"text"},(0,i.kt)("inlineCode",{parentName:"h3"},"text")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"text")," prop is used to display a simple piece of text inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<ListItem text="Hello World" />\n')),(0,i.kt)("h3",{id:"tx"},(0,i.kt)("inlineCode",{parentName:"h3"},"tx")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"tx")," prop is used to display a simple piece of text inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component. It is used to display a localized string."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<ListItem tx="example.helloWorld" />\n')),(0,i.kt)("h3",{id:"children"},(0,i.kt)("inlineCode",{parentName:"h3"},"children")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"children")," prop is used to display components inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component. Note that these will be nested inside a ",(0,i.kt)("a",{parentName:"p",href:"/ignite-cli/boilerplate/components/Text"},(0,i.kt)("inlineCode",{parentName:"a"},"Text"))," component."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"<ListItem height={100}>\n  <Text>Subtext</Text>\n</ListItem>\n")),(0,i.kt)("h3",{id:"txoptions"},(0,i.kt)("inlineCode",{parentName:"h3"},"txOptions")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"txOptions")," prop is used to pass options to the ",(0,i.kt)("inlineCode",{parentName:"p"},"tx")," prop. It is used to display a localized string."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<ListItem tx="example.helloWorld" txOptions={{ name: "John" }} />\n')),(0,i.kt)("h3",{id:"textstyle"},(0,i.kt)("inlineCode",{parentName:"h3"},"textStyle")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"textStyle")," prop is used to pass a style to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Text")," component that is used to display the text inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<ListItem text="Hello World" textStyle={{ color: "red" }} />\n')),(0,i.kt)("h3",{id:"textprops"},(0,i.kt)("inlineCode",{parentName:"h3"},"TextProps")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"TextProps")," prop is used to pass any additional props directly to the ",(0,i.kt)("a",{parentName:"p",href:"/ignite-cli/boilerplate/components/Text"},(0,i.kt)("inlineCode",{parentName:"a"},"Text"))," component."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<ListItem text="Hello World" TextProps={{ weight: "bold" }} />\n')),(0,i.kt)("h3",{id:"containerstyle"},(0,i.kt)("inlineCode",{parentName:"h3"},"containerStyle")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"containerStyle")," prop is used to pass a style to the ",(0,i.kt)("inlineCode",{parentName:"p"},"View")," component that is used to display the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<ListItem text="Hello World" containerStyle={{ backgroundColor: "red" }} />\n')),(0,i.kt)("h3",{id:"style"},(0,i.kt)("inlineCode",{parentName:"h3"},"style")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"style")," prop is used to pass a style to the ",(0,i.kt)("inlineCode",{parentName:"p"},"TouchableOpacity")," component that is used to display the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<ListItem text="Hello World" style={{ backgroundColor: "red" }} />\n')),(0,i.kt)("h3",{id:"lefticon-and-righticon"},(0,i.kt)("inlineCode",{parentName:"h3"},"leftIcon")," and ",(0,i.kt)("inlineCode",{parentName:"h3"},"rightIcon")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"leftIcon")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"rightIcon")," props are used to display an icon on the left or right side of the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component, respectively."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<ListItem text="Hello World" leftIcon="bell" rightIcon="bell" />\n')),(0,i.kt)("h3",{id:"lefticoncolor-and-righticoncolor"},(0,i.kt)("inlineCode",{parentName:"h3"},"leftIconColor")," and ",(0,i.kt)("inlineCode",{parentName:"h3"},"rightIconColor")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"leftIconColor")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"rightIconColor")," props are used to set the color of the icon on the left or right side of the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component, respectively."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<ListItem\n  text="Hello World"\n  leftIcon="bell"\n  leftIconColor="red"\n  rightIcon="bell"\n  rightIconColor="red"\n/>\n')),(0,i.kt)("h3",{id:"rightcomponent-and-leftcomponent"},(0,i.kt)("inlineCode",{parentName:"h3"},"RightComponent")," and ",(0,i.kt)("inlineCode",{parentName:"h3"},"LeftComponent")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"RightComponent")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"LeftComponent")," props are ",(0,i.kt)("inlineCode",{parentName:"p"},"ReactElement")," objects used to display a component on the left or right side of the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListItem")," component, respectively."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<ListItem\n  text="Hello World"\n  LeftComponent={<Text>Left</Text>}\n  RightComponent={<Text>Right</Text>}\n/>\n')))}m.isMDXComponent=!0}}]);