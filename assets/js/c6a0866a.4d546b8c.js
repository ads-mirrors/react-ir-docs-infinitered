"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[5886],{843:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var n=i(4848),s=i(8453);const a={},r="Services folder",o={id:"ignite-cli/boilerplate/app/services/Services",title:"Services folder",description:"The services folder contains services, such as API clients.",source:"@site/docs/ignite-cli/boilerplate/app/services/Services.md",sourceDirName:"ignite-cli/boilerplate/app/services",slug:"/ignite-cli/boilerplate/app/services/",permalink:"/ignite-cli/boilerplate/app/services/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"Ignite",previous:{title:"Screens folder",permalink:"/ignite-cli/boilerplate/app/screens/"},next:{title:"api.ts",permalink:"/ignite-cli/boilerplate/app/services/api.ts"}},c={},l=[{value:"Backend API Integration",id:"backend-api-integration",level:2},{value:"HTTP Client",id:"http-client",level:2},{value:"apisauce",id:"apisauce",level:3},{value:"The Api class",id:"the-api-class",level:3},{value:"A note about React Query (aka TanStack Query)",id:"a-note-about-react-query-aka-tanstack-query",level:3}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"services-folder",children:"Services folder"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"services"})," folder contains services, such as API clients."]}),"\n",(0,n.jsx)(t.p,{children:'"Services" is a somewhat broad term, but we use it to refer to code that is responsible for a specific task, such as making API calls, interacting with the file system, or handling push notifications and so on.'}),"\n",(0,n.jsx)(t.p,{children:"Ignite's boilerplate only comes with one service, the API client. However, you can add as many services as you like in this folder."}),"\n",(0,n.jsx)(t.h2,{id:"backend-api-integration",children:"Backend API Integration"}),"\n",(0,n.jsx)(t.p,{children:"Most apps need to communicate with a backend service of some sort. Some may have a REST API, some a GraphQL API, others might use Firebase/Firestore, Hasura, tRPC, Supabase, AWS/Amplify, or any number of different back end solutions."}),"\n",(0,n.jsxs)(t.p,{children:["Ignite purposely does not make any major decisions about what backend system we expect you to use. As a consultancy, we've integrated apps with all kinds of back ends (ask us about the ",(0,n.jsx)(t.em,{children:"Coldfusion"})," backend we integrated with a few years ago!), and can't be locked into one solution."]}),"\n",(0,n.jsx)(t.p,{children:"Ignite does come with a basic API setup which we'll describe here. Feel free to rip it out and use your own solution if this doesn't fit."}),"\n",(0,n.jsx)(t.p,{children:"With that said, we've built large React Native apps using this pattern, and it works pretty well."}),"\n",(0,n.jsx)(t.h2,{id:"http-client",children:"HTTP Client"}),"\n",(0,n.jsxs)(t.p,{children:["While React Native comes standard with a pretty good built-in ",(0,n.jsx)(t.code,{children:"fetch"})," client library, it's not quite a smooth enough developer experience for us to recommend out of the box. So we include an HTTP client library called ",(0,n.jsx)(t.code,{children:"apisauce"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"apisauce",children:"apisauce"}),"\n",(0,n.jsxs)(t.p,{children:["Ignite comes with ",(0,n.jsx)(t.a,{href:"https://github.com/infinitered/apisauce",children:"apisauce"}),", which is a lightweight wrapper around the popular ",(0,n.jsx)(t.a,{href:"https://axios-http.com/docs/intro",children:"Axios"})," HTTP client library. We maintain this library at Infinite Red and it's a pretty battle-tested, solid HTTP library."]}),"\n",(0,n.jsx)(t.h3,{id:"the-api-class",children:"The Api class"}),"\n",(0,n.jsxs)(t.p,{children:["In ",(0,n.jsx)(t.code,{children:"./app/services/api"}),", you'll find the ",(0,n.jsx)(t.a,{href:"/ignite-cli/boilerplate/app/services/api.ts",children:"Api class"}),". This class is the place to add methods to call when you want to fetch data from your backend. Check out the file for examples of fetching data."]}),"\n",(0,n.jsx)(t.h3,{id:"a-note-about-react-query-aka-tanstack-query",children:"A note about React Query (aka TanStack Query)"}),"\n",(0,n.jsxs)(t.p,{children:["Note that we are currently exploring ",(0,n.jsx)(t.a,{href:"https://tanstack.com/query/",children:"TanStack Query"})," for use in Ignite. We need a few more projects under our belt before we can comfortably include it with Ignite (if we do at all). However, it's a popular solution, so it's worth mentioning here."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var n=i(6540);const s={},a=n.createContext(s);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);