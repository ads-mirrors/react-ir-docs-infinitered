"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[2742],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},s="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),s=l(n),m=a,g=s["".concat(p,".").concat(m)]||s[m]||h[m]||r;return n?o.createElement(g,i(i({ref:t},c),{},{components:n})):o.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d[s]="string"==typeof e?e:a,i[1]=d;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:32},i="Card",d={unversionedId:"ignite-cli/boilerplate/components/Card",id:"ignite-cli/boilerplate/components/Card",title:"Card",description:"The Card component is intended to be used for vertically aligned related content. It is a container that can hold a heading, content, and footer. It can also hold a left and right component that will be aligned to the left and right of the card body.",source:"@site/docs/ignite-cli/boilerplate/components/Card.md",sourceDirName:"ignite-cli/boilerplate/components",slug:"/ignite-cli/boilerplate/components/Card",permalink:"/ignite-cli/boilerplate/components/Card",draft:!1,tags:[],version:"current",sidebarPosition:32,frontMatter:{sidebar_position:32},sidebar:"Ignite",previous:{title:"Button",permalink:"/ignite-cli/boilerplate/components/Button"},next:{title:"EmptyState",permalink:"/ignite-cli/boilerplate/components/EmptyState"}},p={},l=[{value:"Props",id:"props",level:2},{value:"<code>preset</code>",id:"preset",level:3},{value:"<code>verticalAlignment</code>",id:"verticalalignment",level:3},{value:"<code>LeftComponent</code> &amp; <code>RightComponent</code>",id:"leftcomponent--rightcomponent",level:3},{value:"<code>heading</code>",id:"heading",level:3},{value:"<code>headingTx</code>",id:"headingtx",level:3},{value:"<code>headingTxOptions</code>",id:"headingtxoptions",level:3},{value:"<code>headingStyle</code>",id:"headingstyle",level:3},{value:"<code>HeadingTextProps</code>",id:"headingtextprops",level:3},{value:"<code>HeadingComponent</code>",id:"headingcomponent",level:3},{value:"<code>content</code>",id:"content",level:3},{value:"<code>contentTx</code>",id:"contenttx",level:3},{value:"<code>contentTxOptions</code>",id:"contenttxoptions",level:3},{value:"<code>contentStyle</code>",id:"contentstyle",level:3},{value:"<code>ContentTextProps</code>",id:"contenttextprops",level:3},{value:"<code>ContentComponent</code>",id:"contentcomponent",level:3},{value:"<code>footer</code>",id:"footer",level:3},{value:"<code>footerTx</code>",id:"footertx",level:3},{value:"<code>footerTxOptions</code>",id:"footertxoptions",level:3},{value:"<code>footerStyle</code>",id:"footerstyle",level:3},{value:"<code>FooterTextProps</code>",id:"footertextprops",level:3},{value:"<code>FooterComponent</code>",id:"footercomponent",level:3}],c={toc:l},s="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"card"},"Card"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Card")," component is intended to be used for vertically aligned related content. It is a container that can hold a heading, content, and footer. It can also hold a left and right component that will be aligned to the left and right of the card body."),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  preset="reversed"\n  verticalAlignment="space-between"\n  LeftComponent={<Text>Left</Text>}\n  RightComponent={<Text>Right</Text>}\n  heading="Card Heading"\n  headingStyle={{ color: "#a511dc" }}\n  HeadingTextProps={{ weight: "bold" }}\n  content="Card Content"\n  contentStyle={{ color: "#a511dc" }}\n  ContentTextProps={{ weight: "light" }}\n  footer="Card Footer"\n  footerStyle={{ color: "#a511dc" }}\n  FooterTextProps={{ weight: "medium" }}\n/>\n')),(0,a.kt)("h3",{id:"preset"},(0,a.kt)("inlineCode",{parentName:"h3"},"preset")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"preset")," prop is used to set the preset container style of the card. This affects the border and background color of the container. There are two preconfigured presets: ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"reversed"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card preset="reversed" heading="Card Heading" content="Card Content" footer="Card Footer" />\n')),(0,a.kt)("h3",{id:"verticalalignment"},(0,a.kt)("inlineCode",{parentName:"h3"},"verticalAlignment")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"verticalAlignment")," prop is used to set the vertical alignment of the card's content. This affects the alignment of the heading, content, and footer. There are four preconfigured alignments: ",(0,a.kt)("inlineCode",{parentName:"p"},"top"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"center"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"space-between"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"force-footer-bottom"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"force-footer-bottom")," behaves like ",(0,a.kt)("inlineCode",{parentName:"p"},"top"),", but will force the footer to the bottom of the card."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  verticalAlignment="space-between"\n  heading="Card Heading"\n  content="Card Content"\n  footer="Card Footer"\n/>\n')),(0,a.kt)("h3",{id:"leftcomponent--rightcomponent"},(0,a.kt)("inlineCode",{parentName:"h3"},"LeftComponent")," & ",(0,a.kt)("inlineCode",{parentName:"h3"},"RightComponent")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"LeftComponent")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"RightComponent")," props are used to set the component that will be aligned to the left or right of the card body, respectively."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  LeftComponent={\n    <AutoImage\n      maxWidth={80}\n      maxHeight={60}\n      style={{ alignSelf: "center" }}\n      source={{\n        uri: "https://user-images.githubusercontent.com/1775841/184508739-f90d0ce5-7219-42fd-a91f-3382d016eae0.png",\n      }}\n    />\n  }\n  RightComponent={\n    <Button preset="default" text="Click It" onPress={() => Alert.alert("pressed")} />\n  }\n  heading="Card Heading"\n  content="Card Content"\n  footer="Card Footer"\n/>\n')),(0,a.kt)("h3",{id:"heading"},(0,a.kt)("inlineCode",{parentName:"h3"},"heading")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"heading")," prop is used to set the heading text of the card."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card heading="Card Heading" content="Card Content" footer="Card Footer" />\n')),(0,a.kt)("h3",{id:"headingtx"},(0,a.kt)("inlineCode",{parentName:"h3"},"headingTx")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"headingTx")," prop is used to set the heading text of the card using a translation key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card headingTx="card.heading" content="Card Content" footer="Card Footer" />\n')),(0,a.kt)("h3",{id:"headingtxoptions"},(0,a.kt)("inlineCode",{parentName:"h3"},"headingTxOptions")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"headingTxOptions")," prop is used to set the options for the translation key used by the ",(0,a.kt)("inlineCode",{parentName:"p"},"headingTx")," prop."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  headingTx="card.heading"\n  headingTxOptions={{ count: 2 }}\n  content="Card Content"\n  footer="Card Footer"\n/>\n')),(0,a.kt)("h3",{id:"headingstyle"},(0,a.kt)("inlineCode",{parentName:"h3"},"headingStyle")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"headingStyle")," prop is used to set the style of the heading text."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  heading="Card Heading"\n  headingStyle={{ color: "red" }}\n  content="Card Content"\n  footer="Card Footer"\n/>\n')),(0,a.kt)("h3",{id:"headingtextprops"},(0,a.kt)("inlineCode",{parentName:"h3"},"HeadingTextProps")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"HeadingTextProps")," prop is used to pass any additional props to the heading ",(0,a.kt)("inlineCode",{parentName:"p"},"Text")," component. It will accept any prop that the ",(0,a.kt)("a",{parentName:"p",href:"/ignite-cli/boilerplate/components/Text"},(0,a.kt)("inlineCode",{parentName:"a"},"Text"))," component accepts."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  heading="Card Heading"\n  HeadingTextProps={{ size: "lg" }}\n  content="Card Content"\n  footer="Card Footer"\n/>\n')),(0,a.kt)("h3",{id:"headingcomponent"},(0,a.kt)("inlineCode",{parentName:"h3"},"HeadingComponent")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"HeadingComponent")," prop is used to set the component that will be used for the heading. This can be used to set a custom heading component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  HeadingComponent={<Button preset="reversed" text="HeadingComponent" icon="ladybug" />}\n  content="Card Content"\n  footer="Card Footer"\n/>\n')),(0,a.kt)("h3",{id:"content"},(0,a.kt)("inlineCode",{parentName:"h3"},"content")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"content")," prop is used to set the content text of the card."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card heading="Card Heading" content="Card Content" footer="Card Footer" />\n')),(0,a.kt)("h3",{id:"contenttx"},(0,a.kt)("inlineCode",{parentName:"h3"},"contentTx")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"contentTx")," prop is used to set the content text of the card using a translation key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card heading="Card Heading" contentTx="card.content" footer="Card Footer" />\n')),(0,a.kt)("h3",{id:"contenttxoptions"},(0,a.kt)("inlineCode",{parentName:"h3"},"contentTxOptions")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"contentTxOptions")," prop is used to set the options for the translation key used by the ",(0,a.kt)("inlineCode",{parentName:"p"},"contentTx")," prop."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  heading="Card Heading"\n  contentTx="card.content"\n  contentTxOptions={{ count: 2 }}\n  footer="Card Footer"\n/>\n')),(0,a.kt)("h3",{id:"contentstyle"},(0,a.kt)("inlineCode",{parentName:"h3"},"contentStyle")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"contentStyle")," prop is used to set the style of the content text."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  heading="Card Heading"\n  content="Card Content"\n  contentStyle={{ backgroundColor: colors.error, color: colors.palette.neutral100 }}\n  footer="Card Footer"\n/>\n')),(0,a.kt)("h3",{id:"contenttextprops"},(0,a.kt)("inlineCode",{parentName:"h3"},"ContentTextProps")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ContentTextProps")," prop is used to pass any additional props to the content ",(0,a.kt)("inlineCode",{parentName:"p"},"Text")," component. It will accept any prop that the ",(0,a.kt)("a",{parentName:"p",href:"/ignite-cli/boilerplate/components/Text"},(0,a.kt)("inlineCode",{parentName:"a"},"Text"))," component accepts."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  heading="Card Heading"\n  content="Card Content"\n  ContentTextProps={{ size: "lg" }}\n  footer="Card Footer"\n/>\n')),(0,a.kt)("h3",{id:"contentcomponent"},(0,a.kt)("inlineCode",{parentName:"h3"},"ContentComponent")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ContentComponent")," prop is used to set the component that will be used for the content. This can be used to set a custom content component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  heading="Card Heading"\n  ContentComponent={<Button preset="reversed" text="ContentComponent" icon="ladybug" />}\n  footer="Card Footer"\n/>\n')),(0,a.kt)("h3",{id:"footer"},(0,a.kt)("inlineCode",{parentName:"h3"},"footer")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"footer")," prop is used to set the footer text of the card."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card heading="Card Heading" content="Card Content" footer="Card Footer" />\n')),(0,a.kt)("h3",{id:"footertx"},(0,a.kt)("inlineCode",{parentName:"h3"},"footerTx")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"footerTx")," prop is used to set the footer text of the card using a translation key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card heading="Card Heading" content="Card Content" footerTx="card.footer" />\n')),(0,a.kt)("h3",{id:"footertxoptions"},(0,a.kt)("inlineCode",{parentName:"h3"},"footerTxOptions")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"footerTxOptions")," prop is used to set the options for the translation key used by the ",(0,a.kt)("inlineCode",{parentName:"p"},"footerTx")," prop."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  heading="Card Heading"\n  content="Card Content"\n  footerTx="card.footer"\n  footerTxOptions={{ count: 2 }}\n/>\n')),(0,a.kt)("h3",{id:"footerstyle"},(0,a.kt)("inlineCode",{parentName:"h3"},"footerStyle")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"footerStyle")," prop is used to set the style of the footer text."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  heading="Card Heading"\n  content="Card Content"\n  footer="Card Footer"\n  footerStyle={{ color: "red" }}\n/>\n')),(0,a.kt)("h3",{id:"footertextprops"},(0,a.kt)("inlineCode",{parentName:"h3"},"FooterTextProps")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"FooterTextProps")," prop is used to pass any additional props to the footer ",(0,a.kt)("inlineCode",{parentName:"p"},"Text")," component. It will accept any prop that the ",(0,a.kt)("a",{parentName:"p",href:"/ignite-cli/boilerplate/components/Text"},(0,a.kt)("inlineCode",{parentName:"a"},"Text"))," component accepts."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  heading="Card Heading"\n  content="Card Content"\n  footer="Card Footer"\n  FooterTextProps={{ size: "lg" }}\n/>\n')),(0,a.kt)("h3",{id:"footercomponent"},(0,a.kt)("inlineCode",{parentName:"h3"},"FooterComponent")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"FooterComponent")," prop is used to set the component that will be used for the footer. This can be used to set a custom footer component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'<Card\n  heading="Card Heading"\n  content="Card Content"\n  FooterComponent={<Button preset="reversed" text="FooterComponent" icon="ladybug" />}\n/>\n')))}h.isMDXComponent=!0}}]);