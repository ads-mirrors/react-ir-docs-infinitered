"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[8146],{3109:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"react-native-mlkit/image-labeling/image-labeler-options","title":"Image Labeler Options","description":"The MLKit Image Labeler can be configured with various options to control its behavior. These options can be set both","source":"@site/docs/react-native-mlkit/image-labeling/image-labeler-options.md","sourceDirName":"react-native-mlkit/image-labeling","slug":"/react-native-mlkit/image-labeling/image-labeler-options","permalink":"/react-native-mlkit/image-labeling/image-labeler-options","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":99,"frontMatter":{"sidebar_position":99},"sidebar":"React Native MLKit","previous":{"title":"Getting Started","permalink":"/react-native-mlkit/image-labeling/"},"next":{"title":"Using a Custom Model","permalink":"/react-native-mlkit/image-labeling/using-a-custom-model"}}');var a=i(4848),o=i(8453);const s={sidebar_position:99},l="Image Labeler Options",r={},c=[{value:"Available Options",id:"available-options",level:2},{value:"CustomImageLabelerOptions",id:"customimagelabeleroptions",level:3},{value:"Setting Options",id:"setting-options",level:2},{value:"During Initialization",id:"during-initialization",level:3},{value:"Updating Options at Runtime",id:"updating-options-at-runtime",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"image-labeler-options",children:"Image Labeler Options"})}),"\n",(0,a.jsx)(n.p,{children:"The MLKit Image Labeler can be configured with various options to control its behavior. These options can be set both\nduring initialization and updated at runtime."}),"\n",(0,a.jsx)(n.h2,{id:"available-options",children:"Available Options"}),"\n",(0,a.jsx)(n.h3,{id:"customimagelabeleroptions",children:"CustomImageLabelerOptions"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"type ImageLabelingConfig = Record<string, {\n  model: number // the number returned from `require()`\n  options?: CustomImageLabelerOptions;\n}>;\n\ntype CustomImageLabelerOptions = {\n  maxResultCount?: number;     // Maximum number of classifications to return\n  confidenceThreshold?: number; // Minimum confidence score (0-1) for results\n};\n"})}),"\n",(0,a.jsx)(n.h2,{id:"setting-options",children:"Setting Options"}),"\n",(0,a.jsx)(n.h3,{id:"during-initialization",children:"During Initialization"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'const MODELS: ImageLabelingConfig = {\n  myModel: {\n    model: require("./assets/models/model.tflite"),\n    options: {\n      maxResultCount: 5,\n      confidenceThreshold: 0.7,\n    },\n  },\n};\n'})}),"\n",(0,a.jsx)(n.h3,{id:"updating-options-at-runtime",children:"Updating Options at Runtime"}),"\n",(0,a.jsxs)(n.p,{children:["You can update options for a loaded model using the classifier's ",(0,a.jsx)(n.code,{children:"updateOptionsAndReload"})," method:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'const classifier = useImageLabeling("myModel");\n\n// Update options\nawait classifier.updateOptionsAndReload({\n  maxResultCount: 3,\n  confidenceThreshold: 0.8,\n});\n'})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(6540);const a={},o=t.createContext(a);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);