"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[9914],{6723:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var s=n(4848),r=n(8453);const a={sidebar_position:62},o="useHeader",i={id:"ignite-cli/boilerplate/app/utils/useHeader.tsx",title:"useHeader",description:"The useHeader() hook that can be used to easily set the Header of a react-navigation screen from within the screen's component.",source:"@site/docs/ignite-cli/boilerplate/app/utils/useHeader.tsx.md",sourceDirName:"ignite-cli/boilerplate/app/utils",slug:"/ignite-cli/boilerplate/app/utils/useHeader.tsx",permalink:"/ignite-cli/boilerplate/app/utils/useHeader.tsx",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:62,frontMatter:{sidebar_position:62},sidebar:"Ignite",previous:{title:"useSafeAreaInsetsStyle",permalink:"/ignite-cli/boilerplate/app/utils/useSafeAreaInsetsStyle.ts"},next:{title:"app.tsx",permalink:"/ignite-cli/boilerplate/app/app.tsx"}},c={},d=[{value:"Parameters",id:"parameters",level:2},{value:"<code>headerProps: HeaderProps</code>",id:"headerprops-headerprops",level:3},{value:"<code>deps: any[]</code>",id:"deps-any",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"useheader",children:"useHeader"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"useHeader()"})," hook that can be used to easily set the Header of a react-navigation screen from within the screen's component."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:'function AccountScreen() {\n  useHeader({\n    rightTx: "common.logOut",\n    onRightPress: logout,\n  })\n\n  return <Screen />\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"headerprops-headerprops",children:(0,s.jsx)(t.code,{children:"headerProps: HeaderProps"})}),"\n",(0,s.jsxs)(t.p,{children:["The first parameter is an object representing the props that will be passed directly to the ",(0,s.jsx)(t.a,{href:"/ignite-cli/boilerplate/app/components/Header",children:"Header"})," component."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:'useHeader({\n  rightTx: "common.logOut",\n  leftTx: "common.back",\n  onRightPress: logout,\n  onLeftPress: goBack,\n})\n'})}),"\n",(0,s.jsx)(t.h3,{id:"deps-any",children:(0,s.jsx)(t.code,{children:"deps: any[]"})}),"\n",(0,s.jsxs)(t.p,{children:["The second parameter is a list of dependencies passed to the ",(0,s.jsx)(t.code,{children:"useLayoutEffect"})," that will cause the Header to be updated. Use this to control a dynamic header."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"const [count, setCount] = useState(1)\n\nuseEffect(() => {\n  setTimeout(() => setCount(count + 1), 1000)\n}, [count])\n\nuseHeader(\n  {\n    title: `Count: ${count}`,\n  },\n  [count],\n)\n"})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var s=n(6540);const r={},a=s.createContext(r);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);