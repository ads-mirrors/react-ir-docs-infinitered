"use strict";(self.webpackChunkir_docs=self.webpackChunkir_docs||[]).push([[1696],{8936:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var i=s(4848),o=s(8453);const l={sidebar_position:700},t="Plugins",r={id:"gluegun/plugins",title:"Plugins",description:"Functionality is added to the CLI runtime with plugins. Plugins can be yours or the end users.",source:"@site/docs/gluegun/plugins.md",sourceDirName:"gluegun",slug:"/gluegun/plugins",permalink:"/gluegun/plugins",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:700,frontMatter:{sidebar_position:700},sidebar:"Gluegun",previous:{title:"Making a plugin for your Gluegun-powered CLI",permalink:"/gluegun/tutorials/making-a-plugin"},next:{title:"Sniff",permalink:"/gluegun/sniff"}},a={},c=[{value:"commands",id:"commands",level:2},{value:"templates",id:"templates",level:2},{value:"extensions",id:"extensions",level:2},{value:"async extensions",id:"async-extensions",level:3},{value:"name",id:"name",level:2},{value:"defaults",id:"defaults",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"plugins",children:"Plugins"}),"\n",(0,i.jsxs)(n.p,{children:["Functionality is added to the ",(0,i.jsx)(n.code,{children:"CLI runtime"})," with plugins. Plugins can be yours or the end users."]}),"\n",(0,i.jsx)(n.p,{children:"A plugin is directory that contains 3 optional sub-directories:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"commands"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"templates"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"extensions"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["(You can also nest these three directories in ",(0,i.jsx)(n.code,{children:"build"}),", for a build pipeline, and Gluegun will still find them. Requires Gluegun 4.1.0+.)"]}),"\n",(0,i.jsxs)(n.p,{children:["And 1 optional file, which can be ",(0,i.jsx)(n.code,{children:"<brand>.config.js"}),", ",(0,i.jsx)(n.code,{children:".<brand>rc.json"}),", or ",(0,i.jsx)(n.code,{children:".<brand>rc.yaml"}),". Replace ",(0,i.jsx)(n.code,{children:"<brand>"})," with the name of your CLI."]}),"\n",(0,i.jsxs)(n.p,{children:["Other than the 3 directories listed, you're welcome to put any other files or sub-directories in the plugin directory. For example, we include a ",(0,i.jsx)(n.code,{children:"plugin.js"})," file in the root of plugins for ",(0,i.jsx)(n.a,{href:"https://github.com/infinitered/ignite",children:"Ignite CLI"})," to help us load it effectively."]}),"\n",(0,i.jsxs)(n.p,{children:["Since multiple plugins can be loaded, they must have unique names. The names are indicated by reading the ",(0,i.jsx)(n.code,{children:"name"})," property of the configuration (more on this below), or the plugin directory name itself."]}),"\n",(0,i.jsx)(n.h2,{id:"commands",children:"commands"}),"\n",(0,i.jsx)(n.p,{children:"Commands are run from the command line (CLI)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"movies actor\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here, the ",(0,i.jsx)(n.code,{children:"actor"})," command is run. It is a JS file (",(0,i.jsx)(n.code,{children:"src/commands/actor.js"}),") that exports a structure that looks something like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"module.exports = {\n  name: 'actor',\n  alias: ['a'],\n  description: 'Displays the name of an actor',\n  hidden: false,\n  dashed: false,\n  run: async (toolbox) => {\n    const { print } = toolbox\n\n    print.info(`Tom Hanks`)\n  },\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"name"})," and ",(0,i.jsx)(n.code,{children:"description"})," properties are used in ",(0,i.jsx)(n.code,{children:"printCommands"})," calls to print out some help in a table."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"alias"})," allows you to invoke these commands using an alias."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"hidden"})," says whether to show the command in help screens or not."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"dashed"})," lets you run the command as a dashed command, like ",(0,i.jsx)(n.code,{children:"--version"})," or ",(0,i.jsx)(n.code,{children:"-v"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"run"})," property should be a function (async or not) that does whatever you want it to. You'll receive the gluegun ",(0,i.jsx)(n.code,{children:"toolbox"})," object which contains the ",(0,i.jsx)(n.a,{href:"/gluegun/toolbox-api/",children:"core extensions"})," and any additional extensions you've loaded."]}),"\n",(0,i.jsx)(n.h2,{id:"templates",children:"templates"}),"\n",(0,i.jsxs)(n.p,{children:["Templates are ",(0,i.jsx)(n.a,{href:"http://www.embeddedjs.com/",children:"ejs"})," files that get translated by a command into a source code file or similar. For an example, check out the ",(0,i.jsx)(n.a,{href:"https://github.com/infinitered/gluegun/tree/master/src/cli",children:"Gluegun CLI"})," itself."]}),"\n",(0,i.jsx)(n.h2,{id:"extensions",children:"extensions"}),"\n",(0,i.jsxs)(n.p,{children:["Extensions are additional functionality that you can monkeypatch onto the ",(0,i.jsx)(n.code,{children:"toolbox"})," object. They look something like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// extensions/sayhello.js\nmodule.exports = (toolbox) => {\n  const { print } = toolbox\n\n  toolbox.sayhello = () => {\n    print.info('Hello from an extension!')\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"When you have this extension, you can access it in any command file, like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// ...\nrun: async (toolbox) => {\n  const { sayhello } = toolbox\n\n  sayhello()\n\n  // or\n\n  toolbox.sayhello()\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"async-extensions",children:"async extensions"}),"\n",(0,i.jsx)(n.p,{children:"Extensions maybe also be asynchronous, allowing for things like network calls or other asynchronous operations."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// extensions/getMyData.js\nconst { asyncCall } = require('@company/lib')\n\nmodule.exports = async (toolbox) {\n  const { data } = await asyncCall()\n  toolbox.myData = data\n}\n"})}),"\n",(0,i.jsx)(n.h1,{id:"configuration-file",children:"Configuration File"}),"\n",(0,i.jsxs)(n.p,{children:["Gluegun uses ",(0,i.jsx)(n.a,{href:"https://github.com/davidtheclark/cosmiconfig",children:"cosmiconfig"})," to determine configuration. It can be:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["an object under the ",(0,i.jsx)(n.code,{children:"<brand>"})," key in the ",(0,i.jsx)(n.code,{children:"package.json"})]}),"\n",(0,i.jsxs)(n.li,{children:["a ",(0,i.jsx)(n.code,{children:".<brand>rc"})," file (containing either yaml or json)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".<brand>rc.json"})," file"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".<brand>rc.yaml"})," file"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<brand>.config.js"})," JS file that exports an object"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"In this configuration, you can configure your plugin's name and also set up certain user-overridable defaults."}),"\n",(0,i.jsx)(n.h2,{id:"name",children:"name"}),"\n",(0,i.jsxs)(n.p,{children:["The name of your plugin. If ",(0,i.jsx)(n.code,{children:"name"})," does not exist, the default will be the name of the directory."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "name": "something"\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Since many plugins can be installed, we recommend namespacing them with your CLI. For example, for ",(0,i.jsx)(n.a,{href:"https://github.com/infinitered/ignite",children:"Ignite"})," plugins we have ",(0,i.jsx)(n.code,{children:"ignite-i18n"}),", ",(0,i.jsx)(n.code,{children:"ignite-maps"}),", etc. For ",(0,i.jsx)(n.a,{href:"https://github.com/infinitered/solidarity",children:"Solidarity"}),", we have ",(0,i.jsx)(n.code,{children:"solidarity-react-native"})," and ",(0,i.jsx)(n.code,{children:"solidarity-elixir"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"A name:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["can contain ",(0,i.jsx)(n.strong,{children:"numbers & letters"})]}),"\n",(0,i.jsxs)(n.li,{children:["should be ",(0,i.jsx)(n.strong,{children:"lowercase"})]}),"\n",(0,i.jsxs)(n.li,{children:["spaces-should-have-",(0,i.jsx)(n.strong,{children:"dashes"}),"-if-you-need-them"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"defaults",children:"defaults"}),"\n",(0,i.jsx)(n.p,{children:"Default configuration settings which may be used by your commands and overridden by end users."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "semicolons": true,\n  "colorTheme": ["red", "no", "blue", "aaaaaaaaa"]\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If you'd like to follow a tutorial to make a plugin, check out the ",(0,i.jsx)(n.a,{href:"/gluegun/tutorials/making-a-plugin",children:'"Making a Plugin" tutorial'}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>r});var i=s(6540);const o={},l=i.createContext(o);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);